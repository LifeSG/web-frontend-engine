import{useContext as e,useRef as t,useEffect as i}from"react";import{F as a,u as s,a as r,g as l,E as n,b as o,d as m,A as d,I as p}from"./index.1133dd4d.js";import"react/jsx-runtime";import"@lifesg/react-design-system/text";import"@lifesg/react-design-system/modal";import"react-dom/server";import"@lifesg/react-design-system/media";import"events";import"buffer";import"@lifesg/react-design-system/color";import"styled-components";import"@lifesg/react-design-system/button";import"@lifesg/react-design-system/layout";import"@lifesg/react-design-system/alert";import"@lifesg/react-design-system/divider";import"@lifesg/react-design-system/text-list";import"@lifesg/react-design-system/tab";import"@lifesg/react-design-system/filter";import"@lifesg/react-design-system/box-container";import"@lifesg/react-design-system/uneditable-section";import"@lifesg/react-icons";import"@lifesg/react-design-system/form";import"@lifesg/react-design-system/toggle";import"@lifesg/react-design-system/checkbox";import"@lifesg/react-design-system/input-textarea";import"@lifesg/react-design-system/file-upload";import"@lifesg/react-icons/cross";import"@lifesg/react-design-system/icon-button";import"@lifesg/react-icons/pin-fill";import"@lifesg/react-design-system";import"@lifesg/react-design-system/image-button";import"@lifesg/react-design-system/radio-button";const f=["image/jpeg","image/gif","image/png"],c=c=>{const{compressImages:g,fileTypeRule:u,id:y,maxFileSizeRule:w,upload:I,value:U}=c,{files:F,setFiles:b}=e(a),E=s(U),{setValue:R}=r(),T=t();i((()=>{T.current=l()}),[]),i((()=>{F.forEach((async(e,t)=>{try{switch(e.status){case n.INJECTED:await O(e,t);break;case n.NONE:await x(e,t);break;case n.UPLOAD_READY:await z(e,t);break;case n.TO_DELETE:A(t)}}catch(e){D(t)}}));const e=F.filter((({status:e})=>e===n.UPLOADED)),t=e.filter((({addedFrom:e})=>"schema"!==e)),i=F.filter((({status:e})=>e===n.TO_DELETE)).length>0,a=t.length>0||i;R(y,e.map((({dataURL:e,fileItem:t,fileUrl:i,uploadResponse:a})=>({..."base64"===I.type?{dataURL:e}:{},fileId:t.id,fileName:t.name,fileUrl:i,uploadResponse:a}))),{shouldDirty:a})}),[F.map((({fileItem:e,status:t})=>`${e?.id}-${t}`)).join(",")]),i((()=>{void 0!==E&&void 0===U&&F.length&&b([])}),[void 0===E,void 0===U,F.length]);const D=e=>{b((t=>{const i=[...t],a=t[e];return i[e]={...a,fileItem:{...a.fileItem,id:a.fileItem?.id||l(),name:a.rawFile.name,errorMessage:o.UPLOAD().GENERIC},status:n.ERROR_GENERIC},i}))},L=async(e,t)=>{if(f.includes(t||e.fileItem?.type)){const t=await p.dataUrlToImage(e.dataURL),i=await p.resampleImage(t,{width:94,height:94,crop:!0});return await m.fileToDataUrl(i)}return""},h=async e=>{const{addedFrom:t,dataURL:i,rawFile:a}=e,s=await m.getType(a);if(!(!u.fileType?.length||u.fileType?.includes(s.ext)))return{errorMessage:u.errorMessage||o.UPLOAD().FILE_TYPE(u.fileType||[]),fileType:s,status:n.ERROR_FORMAT};if(w.maxSizeInKb>0){const e=1024*w.maxSizeInKb;if("base64"===I.type&&m.getFilesizeFromBase64(i)>e||"multipart"===I.type&&a.size>e)return{errorMessage:w.errorMessage||o.UPLOAD().MAX_FILE_SIZE(w.maxSizeInKb),fileType:s,status:n.ERROR_SIZE}}return"schema"===t?{fileType:s,status:n.UPLOADED}:{fileType:s,status:n.UPLOAD_READY}},O=async(e,t)=>{let i;if(b((e=>{const i=[...e];return i[t]={...e[t],status:n.INJECTING},i})),e.dataURL){const t=await m.dataUrlToBlob(e.dataURL);i=new File([t],e.rawFile.name)}else if(e.fileUrl){const t=await new d("",void 0,void 0,!1,{responseType:"blob"}).get(e.fileUrl),a=await m.getType(new File([t],e.rawFile.name));i=new File([t],e.rawFile.name,{type:a.mime}),e.dataURL=await m.fileToDataUrl(i)}const{errorMessage:a,fileType:s}=await h({...e,rawFile:i}),r=await L(e,s.mime);b((o=>{const d=[...o];return d[t]={...e,fileItem:{errorMessage:a,id:e.fileItem?.id||l(),name:m.deduplicateFileName(F.map((({fileItem:e})=>e?.name)),t,i.name),progress:1,size:i.size,type:s.mime,thumbnailImageDataUrl:r},rawFile:i,status:n.UPLOADED},d}))},x=async(e,t)=>{const i=await M(e),a=await m.fileToDataUrl(i.rawFile),{errorMessage:s,fileType:r,status:n}=await h({dataURL:a,...i});b((e=>{const o=[...e];return o[t]={...i,dataURL:a,fileItem:{errorMessage:s,id:l(),name:m.deduplicateFileName(F.map((({fileItem:e})=>e?.name)),t,i.rawFile.name),size:i.rawFile.size,type:r.mime,progress:0},status:n},o}))},z=async(e,t)=>{b((e=>{const i=[...e];return i[t]={...e[t],status:n.UPLOADING},i}));const i=new FormData;i.append("sessionId",T.current||""),i.append("fileId",e.fileItem.id),i.append("slot",e.slot.toString()),"base64"===I.type?i.append("dataURL",e.dataURL):"multipart"===I.type&&i.append("file",e.rawFile,e.fileItem?.name);const a=await new d("",void 0,void 0,!0).post(I.url,i,{headers:{"Content-Type":"base64"===I.type?"application/json":"multipart/form-data"},onUploadProgress:e=>{const{loaded:i,total:a}=e;b((e=>{if(!e[t])return e;const s=[...e];return s[t]={...e[t],fileItem:{...e[t].fileItem,progress:i/a}},s}))}}),s=await L(e);b((e=>{if(!e[t])return e;const i=[...e];return i[t]={...e[t],fileItem:{...e[t].fileItem,progress:1,thumbnailImageDataUrl:s},fileUrl:a?.data?.fileUrl,status:n.UPLOADED,uploadResponse:a},i}))},A=e=>{b((t=>t.filter(((t,i)=>i!==e))))},M=async e=>{if(w.maxSizeInKb>0&&g){const t=1024*w.maxSizeInKb;if(e.rawFile.size>t){const t=await m.getType(e.rawFile);if(f.includes(t.mime)){let t=await p.compressImage(e.rawFile,{fileSize:w.maxSizeInKb});return t instanceof Blob&&(t=m.blobToFile(t,{name:e.rawFile.name,lastModified:e.rawFile.lastModified})),{...e,rawFile:t}}}}return e};return null};export{c as default};
//# sourceMappingURL=file-upload-manager.17a56fd1.js.map
