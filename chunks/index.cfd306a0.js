import{useContext as t,useState as e,useRef as a,useEffect as s}from"react";import{I as r,u as i,E as o,F as n,a as c,A as l}from"./index.c7b6c36c.js";import"react/jsx-runtime";import"events";import"buffer";import"@lifesg/react-design-system/media";import"@lifesg/react-design-system/alert";import"@lifesg/react-design-system/text";import"@lifesg/react-design-system/color";import"styled-components";import"@lifesg/react-design-system/modal";import"@lifesg/react-design-system/button";import"react-dom/server";import"@lifesg/react-design-system";import"@lifesg/react-design-system/toggle";import"@lifesg/react-design-system/form";import"@lifesg/react-design-system/checkbox";import"@lifesg/react-design-system/input-textarea";import"@lifesg/react-icons/cross";import"@lifesg/react-design-system/icon-button";import"@lifesg/react-icons/pin-fill";import"@lifesg/react-design-system/radio-button";const m=m=>{const{accepts:d,compress:u,dimensions:R,editImage:p,onChange:g,maxSizeInKb:E,outputType:f,upload:h,value:y}=m,{images:U,setImages:D,setErrorCount:O}=t(r),w=i(U),[I,L]=e(0),T=i(y),S=a();s((()=>{S.current=Array(5).fill(0).map((()=>Math.random().toString(36).slice(2))).join("")}),[]),s((()=>{U.forEach(((t,e)=>{const a=w?.[e];if(t.status!==a?.status||t.dataURL!==a.dataURL)switch(t.status){case o.INJECTED:n.dataUrlToBlob(t.dataURL).then((a=>{D((s=>{const r=[...s];return r[e]={...t,file:new File([a],t.name),status:o.NONE},r}))})).catch((()=>{D((t=>t.filter(((t,a)=>a!==e))))}));break;case o.NONE:n.getMimeType(t.file).then((a=>{a&&d.map(n.fileExtensionToMimeType).includes(a)?(D((s=>{const r=[...s];return r[e]={...t,name:n.deduplicateFileName(U.map((({name:t})=>t)),e,t.name),type:a,status:"schema"!==t.addedFrom?t.status:o.UPLOADED},r})),"schema"!==t.addedFrom&&(u?b(e,t):N(e,t))):D((a=>{const s=[...a];return s[e]={...t,status:o.ERROR_FORMAT},s}))}));break;case o.TO_RECOMPRESS:M(e,t);break;case o.COMPRESSED:case o.CONVERTED:case o.RECOMPRESSED:p||D((t=>{const a=[...t];return a[e]={...a[e],status:o.UPLOAD_READY},a}));break;case o.UPLOAD_READY:P(e,t)}}))}),[U.map((({status:t})=>t)).join(","),U.map((({dataURL:t})=>t)).join(",")]),s((()=>{let t=0;U.forEach((e=>{(e.type&&!d.map(n.fileExtensionToMimeType).includes(e.type)||[o.ERROR_GENERIC,o.ERROR_SIZE].includes(e.status))&&t++})),O((e=>Math.max(0,e+t-I))),L(t),g({target:{value:U.filter((({status:t})=>t===o.UPLOADED)).map((({dataURL:t,drawingDataURL:e,name:a,uploadResponse:s})=>({fileName:a,dataURL:e||t,uploadResponse:s})))}})}),[U.map((t=>t.status)).join(",")]),s((()=>{void 0!==T&&void 0===y&&U.length&&D([])}),[void 0===T,void 0===y,U.length]);const C=(t,e)=>{let a=R.width/t;return e*a>R.height&&(a=R.height/e),a},N=async(t,e)=>{try{const a=await c.convertBlob(e.file,n.fileExtensionToMimeType(f)),s=n.getFilesizeFromBase64(a);D(E&&s>1024*E?e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_SIZE},a}:e=>{const s=[...e];return s[t]={...e[t],dataURL:a,status:o.CONVERTED},s})}catch(e){D((e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_GENERIC},a}))}},b=async(t,e)=>{try{const a=await n.fileToDataUrl(e.file),s=await c.dataUrlToImage(a),r={w:s.naturalWidth,h:s.naturalHeight},i=C(r.w,r.h);let l=await c.resampleImage(s,{scale:i});if(E&&(l=await c.compressImage(l,{fileSize:E})),E&&l.size>1024*E)D((e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_SIZE},a}));else{const e=await n.fileToDataUrl(l);D((a=>{const s=[...a];return s[t]={...a[t],dataURL:e,status:o.COMPRESSED},s}))}}catch(e){D((e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_GENERIC},a}))}},M=async(t,e)=>{if(e.drawingDataURL)try{const a=await c.dataUrlToImage(e.drawingDataURL),s={w:a.naturalWidth,h:a.naturalHeight},r=C(s.w,s.h);let i=await c.resampleImage(a,{scale:r});if(i=await c.compressImage(i,{fileSize:E}),i.size>1024*E){const e=[...U];e[t]={...U[t],status:o.ERROR_SIZE},D(e)}else{const e=await n.fileToDataUrl(i),a=[...U];a[t]={...U[t],drawingDataURL:e,status:o.RECOMPRESSED},D(a)}}catch(e){D((e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_GENERIC},a}))}},P=async(t,e)=>{try{let a;if(D((e=>{const a=[...e];return a[t]={...e[t],status:o.UPLOADING},a})),h?.method&&h?.url){const s=new FormData;s.append("dataURL",e.drawingDataURL||e.dataURL||""),s.append("sessionId",S.current||""),s.append("slot",`${e.slot}`),a=await new l("",void 0,void 0,!0)[h.method](h.url,s,{onUploadProgress:e=>{const{loaded:a,total:s}=e,r=Math.floor(100*a/s);D((e=>{const a=[...e];return a[t]={...e[t],uploadProgress:r},a}))}})}D((e=>{const s=[...e];return s[t]={...e[t],uploadResponse:a,status:o.UPLOADED},s}))}catch(e){D((e=>{const a=[...e];return a[t]={...e[t],status:o.ERROR_GENERIC},a}))}};return null};export{m as default};
//# sourceMappingURL=index.cfd306a0.js.map
