import{useContext as t,useState as a,useRef as e,useEffect as s}from"react";import{I as r,u as n,E as o,F as i,a as c,A as l}from"./index.c35e7e64.js";import"react/jsx-runtime";import"events";import"buffer";import"styled-components";import"react-dom";import"react-dom/server";import"@lifesg/react-design-system";import"@lifesg/react-icons/cross";import"@lifesg/react-icons/pin-fill";const u=u=>{const{accepts:R,compress:m,dimensions:d,editImage:E,onChange:p,maxSizeInKb:f,outputType:h,upload:g,value:U}=u,{images:D,setImages:O,setErrorCount:w}=t(r),I=n(D),[L,y]=a(0),T=n(U),S=e();s((()=>{S.current=Array(5).fill(0).map((()=>Math.random().toString(36).slice(2))).join("")}),[]),s((()=>{D.forEach(((t,a)=>{const e=I?.[a];if(t.status!==e?.status||t.dataURL!==e.dataURL)switch(t.status){case o.INJECTED:i.dataUrlToBlob(t.dataURL).then((e=>{O((s=>{const r=[...s];return r[a]={...t,file:new File([e],t.name),status:o.NONE},r}))})).catch((()=>{O((t=>t.filter(((t,e)=>e!==a))))}));break;case o.NONE:i.getMimeType(t.file).then((e=>{e&&R.map(i.fileExtensionToMimeType).includes(e)?(O((s=>{const r=[...s];return r[a]={...t,name:i.deduplicateFileName(D.map((({name:t})=>t)),a,t.name),type:e,status:"schema"!==t.addedFrom?t.status:o.UPLOADED},r})),"schema"!==t.addedFrom&&(m?M(a,t):N(a,t))):O((e=>{const s=[...e];return s[a]={...t,status:o.ERROR_FORMAT},s}))}));break;case o.TO_RECOMPRESS:P(a,t);break;case o.COMPRESSED:case o.CONVERTED:case o.RECOMPRESSED:E||O((t=>{const e=[...t];return e[a]={...e[a],status:o.UPLOAD_READY},e}));break;case o.UPLOAD_READY:_(a,t)}}))}),[D.map((({status:t})=>t)).join(","),D.map((({dataURL:t})=>t)).join(",")]),s((()=>{let t=0;D.forEach((a=>{(a.type&&!R.map(i.fileExtensionToMimeType).includes(a.type)||[o.ERROR_GENERIC,o.ERROR_SIZE].includes(a.status))&&t++})),w((a=>Math.max(0,a+t-L))),y(t),p({target:{value:D.filter((({status:t})=>t===o.UPLOADED)).map((({dataURL:t,drawingDataURL:a,name:e,uploadResponse:s})=>({fileName:e,dataURL:a||t,uploadResponse:s})))}})}),[D.map((t=>t.status)).join(",")]),s((()=>{void 0!==T&&void 0===U&&D.length&&O([])}),[void 0===T,void 0===U,D.length]);const C=(t,a)=>{let e=d.width/t;return a*e>d.height&&(e=d.height/a),e},N=async(t,a)=>{try{const e=await c.convertBlob(a.file,i.fileExtensionToMimeType(h)),s=i.getFilesizeFromBase64(e);O(f&&s>1024*f?a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_SIZE},e}:a=>{const s=[...a];return s[t]={...a[t],dataURL:e,status:o.CONVERTED},s})}catch(a){O((a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_GENERIC},e}))}},M=async(t,a)=>{try{const e=await i.fileToDataUrl(a.file),s=await c.dataUrlToImage(e),r={w:s.naturalWidth,h:s.naturalHeight},n=C(r.w,r.h);let l=await c.resampleImage(s,{scale:n});if(f&&(l=await c.compressImage(l,{fileSize:f})),f&&l.size>1024*f)O((a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_SIZE},e}));else{const a=await i.fileToDataUrl(l);O((e=>{const s=[...e];return s[t]={...e[t],dataURL:a,status:o.COMPRESSED},s}))}}catch(a){O((a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_GENERIC},e}))}},P=async(t,a)=>{if(a.drawingDataURL)try{const e=await c.dataUrlToImage(a.drawingDataURL),s={w:e.naturalWidth,h:e.naturalHeight},r=C(s.w,s.h);let n=await c.resampleImage(e,{scale:r});if(n=await c.compressImage(n,{fileSize:f}),n.size>1024*f){const a=[...D];a[t]={...D[t],status:o.ERROR_SIZE},O(a)}else{const a=await i.fileToDataUrl(n),e=[...D];e[t]={...D[t],drawingDataURL:a,status:o.RECOMPRESSED},O(e)}}catch(a){O((a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_GENERIC},e}))}},_=async(t,a)=>{try{let e;if(O((a=>{const e=[...a];return e[t]={...a[t],status:o.UPLOADING},e})),g?.method&&g?.url){const s=new FormData;s.append("dataURL",a.drawingDataURL||a.dataURL||""),s.append("sessionId",S.current||""),s.append("slot",`${a.slot}`),e=await new l("",void 0,void 0,!0)[g.method](g.url,s,{onUploadProgress:a=>{const{loaded:e,total:s}=a,r=Math.floor(100*e/s);O((a=>{const e=[...a];return e[t]={...a[t],uploadProgress:r},e}))}})}O((a=>{const s=[...a];return s[t]={...a[t],uploadResponse:e,status:o.UPLOADED},s}))}catch(a){O((a=>{const e=[...a];return e[t]={...a[t],status:o.ERROR_GENERIC},e}))}};return null};export{u as default};
//# sourceMappingURL=index.cda74e5e.js.map
