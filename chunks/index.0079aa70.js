import{useContext as t,useState as e,useRef as s,useEffect as a}from"react";import{I as i,u as r,a as o,b as n,E as l,F as c,d as m,A as d}from"./index.412e194a.js";import"react/jsx-runtime";import"@lifesg/react-design-system/text";import"@lifesg/react-design-system/color";import"styled-components";import"events";import"buffer";import"@lifesg/react-design-system/modal";import"@lifesg/react-design-system/media";import"@lifesg/react-design-system/button";import"react-dom/server";import"@lifesg/react-design-system/layout";import"@lifesg/react-design-system/alert";import"@lifesg/react-design-system/divider";import"@lifesg/react-design-system/text-list";import"@lifesg/react-design-system/tab";import"@lifesg/react-design-system/filter";import"@lifesg/react-design-system/box-container";import"@lifesg/react-design-system/uneditable-section";import"@lifesg/react-icons/eye";import"@lifesg/react-icons/eye-slash";import"@lifesg/react-icons";import"@lifesg/react-design-system/form";import"@lifesg/react-design-system/toggle";import"@lifesg/react-design-system/checkbox";import"@lifesg/react-design-system/input-textarea";import"@lifesg/react-design-system/file-upload";import"@lifesg/react-icons/cross";import"@lifesg/react-design-system/icon-button";import"@lifesg/react-icons/pin-fill";import"@lifesg/react-design-system";import"@lifesg/react-design-system/image-button";import"@lifesg/react-design-system/radio-button";const u=u=>{const{accepts:p,compress:g,dimensions:E,editImage:f,id:R,maxSizeInKb:y,outputType:h,upload:D,value:O}=u,{images:U,setImages:L,setErrorCount:T}=t(i),w=r(U),[I,b]=e(0),S=r(O),{setValue:v}=o(),N=s(),{dispatchFieldEvent:_,addFieldEventListener:x,removeFieldEventListener:M}=n();a((()=>{const t=t=>{L((e=>{const s=e.findIndex((e=>e.id===t.detail.id)),a={...e[s]};a.status=t.detail.updatedStatus,a.customErrorMessage=t.detail.errorMessage;const i=[...e];return i.splice(s,1,a),i}))};return x("update-file-validation",R,t),()=>M("update-file-validation",R,t)}),[]),a((()=>{N.current=Array(5).fill(0).map((()=>Math.random().toString(36).slice(2))).join("")}),[]),a((()=>{U.forEach(((t,e)=>{const s=w?.[e];if(t.status!==s?.status||t.dataURL!==s.dataURL)switch(t.status){case l.INJECTED:c.dataUrlToBlob(t.dataURL).then((s=>{L((a=>{const i=[...a];return i[e]={...t,file:new File([s],t.name),status:l.NONE},i}))})).catch((()=>{L((t=>t.filter(((t,s)=>s!==e))))}));break;case l.NONE:c.getType(t.file).then((s=>{const a=s.mime;a&&p.map(c.fileExtensionToMimeType).includes(a)?(L((s=>{const i=[...s];return i[e]={...t,name:c.deduplicateFileName(U.map((({name:t})=>t)),e,t.name),type:a,status:"schema"!==t.addedFrom?t.status:l.UPLOADED},i})),"schema"!==t.addedFrom&&(g?F(e,t):P(e,t))):L((s=>{const a=[...s];return a[e]={...t,status:l.ERROR_FORMAT},a}))}));break;case l.TO_RECOMPRESS:A(e,t);break;case l.COMPRESSED:case l.CONVERTED:case l.RECOMPRESSED:if(!f){const s=!_("upload-ready",R,{imageData:t});L((t=>{const a=[...t];return a[e]={...a[e],status:s?l.PENDING:l.UPLOAD_READY},a}))}break;case l.UPLOAD_READY:G(e,t);break;case l.TO_DELETE:L((t=>t.filter((({status:t})=>t!==l.TO_DELETE))))}}))}),[U.map((({status:t})=>t)).join(","),U.map((({dataURL:t})=>t)).join(",")]),a((()=>{let t=0;U.forEach((e=>{(e.type&&!p.map(c.fileExtensionToMimeType).includes(e.type)||[l.ERROR_GENERIC,l.ERROR_SIZE].includes(e.status))&&t++})),T((e=>Math.max(0,e+t-I))),b(t);const e=U.filter((({status:t})=>t===l.UPLOADED)),s=e.filter((({addedFrom:t})=>"schema"!==t)),a=U.filter((({status:t})=>t===l.TO_DELETE)).length>0,i=s.length>0||a;v(R,e.map((({dataURL:t,drawingDataURL:e,name:s,uploadResponse:a})=>({fileName:s,dataURL:e||t,uploadResponse:a}))),{shouldDirty:i})}),[U.map((t=>t.status)).join(",")]),a((()=>{void 0!==S&&void 0===O&&U.length&&L([])}),[void 0===S,void 0===O,U.length]);const C=(t,e)=>{let s=E.width/t;return e*s>E.height&&(s=E.height/e),s},P=async(t,e)=>{try{const s=await m.convertBlob(e.file,c.fileExtensionToMimeType(h)),a=c.getFilesizeFromBase64(s);L(y&&a>1024*y?e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_SIZE},s}:e=>{const a=[...e];return a[t]={...e[t],dataURL:s,status:l.CONVERTED},a})}catch(e){L((e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_GENERIC},s}))}},F=async(t,e)=>{try{const s=await m.convertBlob(e.file,c.fileExtensionToMimeType(h)),a=await m.dataUrlToImage(s),i={w:a.naturalWidth,h:a.naturalHeight},r=C(i.w,i.h);let o=await m.resampleImage(a,{scale:r});if(y&&(o=await m.compressImage(o,{fileSize:y})),y&&o.size>1024*y)L((e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_SIZE},s}));else{const e=await c.fileToDataUrl(o);L((s=>{const a=[...s];return a[t]={...s[t],dataURL:e,status:l.COMPRESSED},a}))}}catch(e){L((e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_GENERIC},s}))}},A=async(t,e)=>{if(e.drawingDataURL)try{const s=await m.dataUrlToImage(e.drawingDataURL),a={w:s.naturalWidth,h:s.naturalHeight},i=C(a.w,a.h);let r=await m.resampleImage(s,{scale:i});if(r=await m.compressImage(r,{fileSize:y}),r.size>1024*y){const e=[...U];e[t]={...U[t],status:l.ERROR_SIZE},L(e)}else{const e=await c.fileToDataUrl(r),s=[...U];s[t]={...U[t],drawingDataURL:e,status:l.RECOMPRESSED},L(s)}}catch(e){L((e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_GENERIC},s}))}},G=async(t,e)=>{try{let s;if(L((e=>{const s=[...e];return s[t]={...e[t],status:l.UPLOADING},s})),D?.method&&D?.url){const a=new FormData;a.append("dataURL",e.drawingDataURL||e.dataURL||""),a.append("sessionId",N.current||""),a.append("slot",`${e.slot}`),s=await new d("",void 0,void 0,!0)[D.method](D.url,a,{onUploadProgress:e=>{const{loaded:s,total:a}=e,i=Math.floor(100*s/a);L((e=>{const s=[...e];return s[t]={...e[t],uploadProgress:i},s}))}})}L((e=>{const a=[...e];return a[t]={...e[t],uploadResponse:s,status:l.UPLOADED},a}))}catch(e){L((e=>{const s=[...e];return s[t]={...e[t],status:l.ERROR_GENERIC},s}))}};return null};export{u as default};
//# sourceMappingURL=index.0079aa70.js.map
