import{useContext as t,useState as e,useRef as a,useEffect as s}from"react";import{I as i,u as r,a as o,E as n,F as c,b as l,A as m}from"./index.c644b532.js";import"react/jsx-runtime";import"events";import"buffer";import"@lifesg/react-design-system/media";import"@lifesg/react-design-system/text";import"@lifesg/react-design-system/color";import"styled-components";import"@lifesg/react-design-system/modal";import"@lifesg/react-design-system/button";import"react-dom/server";import"@lifesg/react-design-system/alert";import"@lifesg/react-design-system";import"@lifesg/react-design-system/uneditable-section";import"@lifesg/react-design-system/toggle";import"@lifesg/react-design-system/form";import"@lifesg/react-design-system/checkbox";import"@lifesg/react-design-system/input-textarea";import"@lifesg/react-icons/cross";import"@lifesg/react-design-system/icon-button";import"@lifesg/react-icons/pin-fill";import"@lifesg/react-design-system/radio-button";const d=d=>{const{accepts:u,compress:p,dimensions:R,editImage:E,id:g,maxSizeInKb:f,outputType:h,upload:y,value:D}=d,{images:O,setImages:U,setErrorCount:w}=t(i),T=r(O),[L,I]=e(0),S=r(D),{setValue:b,getFieldState:_}=o(),N=a();s((()=>{N.current=Array(5).fill(0).map((()=>Math.random().toString(36).slice(2))).join("")}),[]),s((()=>{O.forEach(((t,e)=>{const a=T?.[e];if(t.status!==a?.status||t.dataURL!==a.dataURL)switch(t.status){case n.INJECTED:c.dataUrlToBlob(t.dataURL).then((a=>{U((s=>{const i=[...s];return i[e]={...t,file:new File([a],t.name),status:n.NONE},i}))})).catch((()=>{U((t=>t.filter(((t,a)=>a!==e))))}));break;case n.NONE:c.getMimeType(t.file).then((a=>{a&&u.map(c.fileExtensionToMimeType).includes(a)?(U((s=>{const i=[...s];return i[e]={...t,name:c.deduplicateFileName(O.map((({name:t})=>t)),e,t.name),type:a,status:"schema"!==t.addedFrom?t.status:n.UPLOADED},i})),"schema"!==t.addedFrom&&(p?P(e,t):M(e,t))):U((a=>{const s=[...a];return s[e]={...t,status:n.ERROR_FORMAT},s}))}));break;case n.TO_RECOMPRESS:x(e,t);break;case n.COMPRESSED:case n.CONVERTED:case n.RECOMPRESSED:E||U((t=>{const a=[...t];return a[e]={...a[e],status:n.UPLOAD_READY},a}));break;case n.UPLOAD_READY:A(e,t);break;case n.TO_DELETE:U((t=>t.filter((({status:t})=>t!==n.TO_DELETE))))}}))}),[O.map((({status:t})=>t)).join(","),O.map((({dataURL:t})=>t)).join(",")]),s((()=>{let t=0;O.forEach((e=>{(e.type&&!u.map(c.fileExtensionToMimeType).includes(e.type)||[n.ERROR_GENERIC,n.ERROR_SIZE].includes(e.status))&&t++})),w((e=>Math.max(0,e+t-L))),I(t);const e=O.filter((({status:t})=>t===n.UPLOADED)),a=e.filter((({addedFrom:t})=>"schema"!==t)),s=O.filter((({status:t})=>t===n.TO_DELETE)).length>0,i=a.length>0||s;b(g,e.map((({dataURL:t,drawingDataURL:e,name:a,uploadResponse:s})=>({fileName:a,dataURL:e||t,uploadResponse:s}))),{shouldDirty:i})}),[O.map((t=>t.status)).join(",")]),s((()=>{void 0!==S&&void 0===D&&O.length&&U([])}),[void 0===S,void 0===D,O.length]);const C=(t,e)=>{let a=R.width/t;return e*a>R.height&&(a=R.height/e),a},M=async(t,e)=>{try{const a=await l.convertBlob(e.file,c.fileExtensionToMimeType(h)),s=c.getFilesizeFromBase64(a);U(f&&s>1024*f?e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_SIZE},a}:e=>{const s=[...e];return s[t]={...e[t],dataURL:a,status:n.CONVERTED},s})}catch(e){U((e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_GENERIC},a}))}},P=async(t,e)=>{try{const a=await c.fileToDataUrl(e.file),s=await l.dataUrlToImage(a),i={w:s.naturalWidth,h:s.naturalHeight},r=C(i.w,i.h);let o=await l.resampleImage(s,{scale:r});if(f&&(o=await l.compressImage(o,{fileSize:f})),f&&o.size>1024*f)U((e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_SIZE},a}));else{const e=await c.fileToDataUrl(o);U((a=>{const s=[...a];return s[t]={...a[t],dataURL:e,status:n.COMPRESSED},s}))}}catch(e){U((e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_GENERIC},a}))}},x=async(t,e)=>{if(e.drawingDataURL)try{const a=await l.dataUrlToImage(e.drawingDataURL),s={w:a.naturalWidth,h:a.naturalHeight},i=C(s.w,s.h);let r=await l.resampleImage(a,{scale:i});if(r=await l.compressImage(r,{fileSize:f}),r.size>1024*f){const e=[...O];e[t]={...O[t],status:n.ERROR_SIZE},U(e)}else{const e=await c.fileToDataUrl(r),a=[...O];a[t]={...O[t],drawingDataURL:e,status:n.RECOMPRESSED},U(a)}}catch(e){U((e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_GENERIC},a}))}},A=async(t,e)=>{try{let a;if(U((e=>{const a=[...e];return a[t]={...e[t],status:n.UPLOADING},a})),y?.method&&y?.url){const s=new FormData;s.append("dataURL",e.drawingDataURL||e.dataURL||""),s.append("sessionId",N.current||""),s.append("slot",`${e.slot}`),a=await new m("",void 0,void 0,!0)[y.method](y.url,s,{onUploadProgress:e=>{const{loaded:a,total:s}=e,i=Math.floor(100*a/s);U((e=>{const a=[...e];return a[t]={...e[t],uploadProgress:i},a}))}})}U((e=>{const s=[...e];return s[t]={...e[t],uploadResponse:a,status:n.UPLOADED},s}))}catch(e){U((e=>{const a=[...e];return a[t]={...e[t],status:n.ERROR_GENERIC},a}))}};return null};export{d as default};
//# sourceMappingURL=index.51ff90ac.js.map
