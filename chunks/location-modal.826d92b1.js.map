{"version":3,"file":"location-modal.826d92b1.js","sources":["../../src/components/fields/location-field/location-modal/location-modal.data.ts","../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/fields/location-field/location-modal/location-picker/helper.ts","../../src/components/fields/location-field/location-modal/location-picker/location-picker.styles.ts","../../src/components/fields/location-field/location-modal/location-modal.styles.ts","../../src/components/fields/location-field/location-modal/location-picker/location-picker.tsx","../../src/components/fields/location-field/location-modal/location-picker/location-picker.data.ts","../../node_modules/react-intersection-observer-hook/dist/react-intersection-observer-hook.esm.js","../../src/components/fields/location-field/location-modal/infinite-scroll/infinite-scroll.style.ts","../../src/components/fields/location-field/location-modal/infinite-scroll/loading-indicator/loading-indicator.styles.ts","../../src/components/fields/location-field/location-modal/infinite-scroll/loading-indicator/config.ts","../../src/components/fields/location-field/location-modal/infinite-scroll/loading-indicator/loading-indicator.tsx","../../src/components/fields/location-field/location-modal/infinite-scroll/infinite-scroll.tsx","../../node_modules/react-infinite-scroll-hook/dist/react-infinite-scroll-hook.esm.js","../../src/components/fields/location-field/location-modal/location-search/helper.ts","../../src/components/fields/location-field/location-modal/location-search/location-search.styles.ts","../../src/components/fields/location-field/location-modal/location-search/location-search.tsx","../../src/components/fields/location-field/location-modal/location-search/location-search.data.ts","../../src/components/fields/location-field/location-modal/no-network-modal/no-network-modal.styles.ts","../../src/components/fields/location-field/location-modal/no-network-modal/no-network-modal.tsx","../../src/components/fields/location-field/location-modal/location-modal.tsx"],"sourcesContent":["export const ERROR_SVG = \"https://assets.life.gov.sg/web-frontend-engine/img/common/error.svg\";\nexport const OFFLINE_IMAGE = \"https://assets.life.gov.sg/web-frontend-engine/img/common/no-network.png\";\nexport const TIMEOUT_SVG = \"https://assets.life.gov.sg/web-frontend-engine/img/icons/get-location-timeout.svg\";\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IMapPin } from \"./types\";\nimport * as L from \"leaflet\";\n\nexport const markerFrom = ({ lat, lng }: IMapPin, iconUrl: string, isSelected?: boolean | undefined): L.Marker => {\n\tconst pinSize = isSelected ? 44 : 32;\n\n\treturn L.marker([lat, lng], {\n\t\ticon: L.icon({\n\t\t\ticonUrl,\n\t\t\ticonSize: [pinSize, pinSize],\n\t\t\ticonAnchor: [pinSize / 2, pinSize],\n\t\t}),\n\t});\n};\n\nexport const removeMarkers = (markers: L.Marker[] | undefined) => {\n\tif (!markers) return;\n\tmarkers.forEach((marker) => marker.remove());\n};\n","import { Color } from \"@lifesg/react-design-system/color\";\nimport styled from \"styled-components\";\n\nexport const LocationPickerWrapper = styled.div`\n\tposition: relative;\n`;\n\nexport const LeafletWrapper = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\n\t.leaflet-control-container .leaflet-control {\n\t\t&-zoom {\n\t\t\tposition: absolute;\n\t\t\tright: 1.5rem;\n\t\t\tbottom: 6rem;\n\t\t\twidth: 2.5rem;\n\t\t\theight: 5rem;\n\t\t\tmargin: 0;\n\t\t\tborder: 0;\n\n\t\t\t&-in,\n\t\t\t&-out {\n\t\t\t\theight: 50%;\n\t\t\t}\n\n\t\t\t&.leaflet-bar {\n\t\t\t\tborder-radius: 1.25rem;\n\t\t\t\toverflow: hidden;\n\t\t\t\tbox-shadow: 0 0.125rem 0.25rem ${Color.Neutral[1]}66;\n\t\t\t}\n\n\t\t\t&.leaflet-bar a {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 50%;\n\t\t\t\tcolor: ${Color.Primary};\n\t\t\t\tfont-weight: bold;\n\n\t\t\t\t&.leaflet-control-zoom-in {\n\t\t\t\t\tborder-bottom-color: ${Color.Neutral[5]};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&-attribution {\n\t\t\tfont-size: 0 !important;\n\n\t\t\t*:not(.onemap):not(.onemap *) {\n\t\t\t\tdisplay: none !important;\n\t\t\t}\n\n\t\t\t.onemap {\n\t\t\t\tfont-size: 0.6875rem;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ButtonLocation = styled.button`\n\tposition: absolute;\n\tright: 1.5rem;\n\tbottom: 2.5rem;\n\tz-index: 1000;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 2.5rem;\n\theight: 2.5rem;\n\tborder: 0;\n\tborder-radius: 50%;\n\tpadding: 0;\n\tbackground: ${Color.Neutral[8]};\n\tcursor: pointer;\n\tbox-shadow: 0 0.125rem 0.25rem ${Color.Neutral[1]}66;\n`;\n\nexport const ButtonLocationImage = styled.img`\n\twidth: 1.5rem;\n\theight: 1.5rem;\n`;\n","import { MediaQuery, MediaWidths } from \"@lifesg/react-design-system/media\";\nimport { Modal } from \"@lifesg/react-design-system/modal\";\nimport styled from \"styled-components\";\nimport { TPanelInputMode } from \"../types\";\nimport { LocationPicker } from \"./location-picker\";\n\ninterface ISinglePanelStyle {\n\tpanelInputMode: TPanelInputMode;\n}\n\ninterface IModalBoxStyle {\n\tlocationModalStyles?: string | undefined;\n}\n\nexport const ModalBox = styled(Modal.Box)<IModalBoxStyle>`\n\tflex-direction: row;\n\twidth: 70%;\n\tmax-width: 45rem;\n\theight: 40rem;\n\n\t// set z-index to get past safari border-radius issue\n\tz-index: 1;\n\n\t${({ locationModalStyles }) => {\n\t\tif (locationModalStyles) return `${locationModalStyles}`;\n\t}}\n\n\t${MediaQuery.MaxWidth.tablet} {\n\t\tflex-direction: column;\n\t\theight: 90%;\n\t\tmax-height: 90%;\n\t}\n\n\t${MediaQuery.MaxWidth.mobileL}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tflex-direction: column;\n\t\tmax-width: none;\n\t\tmax-height: none;\n\t\tborder-radius: 0;\n\t}\n`;\n\nexport const StyledLocationPicker = styled(LocationPicker)<ISinglePanelStyle>`\n\twidth: 48.89%;\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tdisplay: ${({ panelInputMode }) => (panelInputMode !== \"map\" ? \"none\" : \"block\")};\n\t\tposition: relative;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\tmargin-top: 1rem;\n\t\theight: calc(100% - 13rem);\n\t}\n`;\n\nexport const ErrorImage = styled.img`\n\tdisplay: block;\n\tmargin: 0 auto 2rem;\n\twidth: 10.5rem;\n\theight: 8rem;\n\n\t${MediaQuery.MaxWidth.mobileL} {\n\t\tmargin-top: 2.5rem;\n\t}\n`;\n\nexport const PrefetchImage = styled.img`\n\tdisplay: none;\n`;\n","import { MediaWidths } from \"@lifesg/react-design-system\";\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useEffect, useRef } from \"react\";\nimport { TestHelper } from \"../../../../../utils\";\nimport { ILocationCoord } from \"../../types\";\nimport { markerFrom, removeMarkers } from \"./helper\";\nimport { CURRENT_LOCATION, CURRENT_LOCATION_UNAVAILABLE, LOCATION_PIN_BLUE } from \"./location-picker.data\";\nimport { ButtonLocation, ButtonLocationImage, LeafletWrapper, LocationPickerWrapper } from \"./location-picker.styles\";\nimport { ILocationPickerProps } from \"./types\";\nimport { LocationHelper } from \"../../location-helper\";\n\n// Show picker when\n// tablet: \"map\" mode\n// desktop : always on \"double\" mode\n// Hide when tablet: \"search\" mode\nexport const LocationPicker = ({\n\tid = \"location-picker\",\n\tclassName,\n\tmapPanZoom,\n\tpanelInputMode,\n\tshowLocationModal,\n\tselectedLocationCoord,\n\tinteractiveMapPinIconUrl = LOCATION_PIN_BLUE,\n\tgetCurrentLocation,\n\tlocationAvailable,\n\tgettingCurrentLocation,\n\tonMapCenterChange,\n}: ILocationPickerProps) => {\n\t// =============================================================================\n\t// CONST, STATE, REFS\n\t// =============================================================================\n\tconst mapRef = useRef<L.Map>();\n\n\tconst leafletWrapperRef = useRef<HTMLDivElement>(null);\n\tconst markersRef = useRef<L.Marker[]>();\n\tconst isMobile = window.matchMedia(`(max-width: ${MediaWidths.tablet}px)`).matches;\n\tconst leafletConfig: L.MapOptions = {\n\t\tminZoom: 11,\n\t\tmaxZoom: isMobile ? 20 : 19,\n\t};\n\n\t// =============================================================================\n\t// EFFECTS\n\t// =============================================================================\n\t/**\n\t * Attach map and keep ref\n\t */\n\tuseEffect(() => {\n\t\t/**\n\t\t * If component has mounted and is in map mode OR double panel (location picker is alway on for double panel)\n\t\t */\n\t\tif (leafletWrapperRef.current && showLocationModal) {\n\t\t\tif (!mapRef.current) {\n\t\t\t\tmapRef.current = L.map(leafletWrapperRef.current, { zoomControl: false });\n\t\t\t\tresetView();\n\t\t\t\tL.control\n\t\t\t\t\t.zoom({\n\t\t\t\t\t\tposition: \"bottomright\",\n\t\t\t\t\t})\n\t\t\t\t\t.addTo(mapRef.current);\n\t\t\t}\n\t\t\tconst basemap = L.tileLayer(\"https://maps-{s}.onemap.sg/v3/Default/{z}/{x}/{y}.png\", {\n\t\t\t\tdetectRetina: true,\n\t\t\t\tmaxNativeZoom: 18,\n\t\t\t\tmaxZoom: isMobile ? 20 : 19,\n\t\t\t\tminZoom: leafletConfig.minZoom,\n\t\t\t\t// Do not remove this attribution\n\t\t\t\tattribution:\n\t\t\t\t\t'<div class=\"onemap\"><img src=\"https://www.onemap.gov.sg/docs/maps/images/oneMap64-01.png\" style=\"height:20px;width:20px;\"/> OneMap | Map data &copy; contributors, <a href=\"http://SLA.gov.sg\">Singapore Land Authority</a></div>',\n\t\t\t});\n\n\t\t\tmapRef.current.setMaxBounds(LocationHelper.getMapBounds());\n\t\t\tbasemap.addTo(mapRef.current);\n\n\t\t\t// even if it didn't change, as it may have panned off-centre.\n\t\t\tif (!gettingCurrentLocation && selectedLocationCoord?.lat && selectedLocationCoord?.lng) {\n\t\t\t\t// NOTE: map will zoom when input is cleared in search panelInputMode and switches to map panelInputMode\n\t\t\t\tzoomWithMarkers({ lat: selectedLocationCoord.lat, lng: selectedLocationCoord.lng });\n\t\t\t}\n\t\t\tconst map = mapRef.current;\n\n\t\t\t// Reattach event listeners\n\t\t\tmap.on(\"click\", ({ latlng }: L.LeafletMouseEvent) => {\n\t\t\t\tif (!gettingCurrentLocation) {\n\t\t\t\t\tonMapCenterChange(latlng);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmap.on(\"zoomend\", () => map.setMinZoom(mapPanZoom?.min ?? leafletConfig.minZoom));\n\t\t} else {\n\t\t\tif (mapRef.current) {\n\t\t\t\tmapRef.current?.off();\n\t\t\t\tmapRef.current?.remove();\n\t\t\t\tmapRef.current = undefined;\n\t\t\t}\n\t\t}\n\t}, [showLocationModal]);\n\n\t/**\n\t * Centre map to selected location from search result\n\t * Show the pan when we can see the map\n\t */\n\tuseEffect(() => {\n\t\tif (selectedLocationCoord?.lat && selectedLocationCoord?.lng) {\n\t\t\tzoomWithMarkers(selectedLocationCoord);\n\t\t} else {\n\t\t\tresetView();\n\t\t}\n\t}, [selectedLocationCoord?.lat, selectedLocationCoord?.lng]);\n\n\t// =============================================================================\n\t// HELPER FUNCTIONS\n\t// =============================================================================\n\tconst resetView = () => {\n\t\tif (mapRef.current) {\n\t\t\tremoveMarkers(markersRef.current);\n\t\t\tconst center = L.bounds([1.56073, 104.11475], [1.16, 103.502]).getCenter();\n\t\t\tmapRef.current.setView([center.x, center.y], 12);\n\t\t\tsetTimeout(() => mapRef.current?.invalidateSize(), 500);\n\t\t}\n\t};\n\n\tconst zoomWithMarkers = (target: ILocationCoord) => {\n\t\tconst map = mapRef.current;\n\t\tif (!map) return;\n\t\tremoveMarkers(markersRef.current);\n\n\t\tmarkersRef.current = [markerFrom(target, interactiveMapPinIconUrl).addTo(map)];\n\t\tconst panZoomValue = Math.max(\n\t\t\tmapPanZoom?.min ?? leafletConfig.minZoom,\n\t\t\tisMobile ? mapPanZoom?.mobile ?? 18 : mapPanZoom?.nonMobile ?? 17\n\t\t);\n\n\t\tconst zoomValue =\n\t\t\tmap.getBounds().contains([target.lat, target.lng]) && map.getZoom() > panZoomValue\n\t\t\t\t? map.getZoom()\n\t\t\t\t: panZoomValue;\n\n\t\tmap.flyTo(L.latLng(target.lat, target.lng), zoomValue);\n\t\tsetTimeout(() => map.invalidateSize(), 500);\n\t};\n\n\treturn (\n\t\t<LocationPickerWrapper\n\t\t\tclassName={className}\n\t\t\tid={TestHelper.generateId(id, \"location-picker\")}\n\t\t\tdata-testid={TestHelper.generateId(id, \"location-picker\", panelInputMode === \"search\" ? \"hide\" : \"show\")}\n\t\t>\n\t\t\t<LeafletWrapper ref={leafletWrapperRef} />\n\t\t\t<ButtonLocation\n\t\t\t\tonClick={() => {\n\t\t\t\t\tlocationAvailable && getCurrentLocation();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ButtonLocationImage\n\t\t\t\t\tsrc={locationAvailable ? CURRENT_LOCATION : CURRENT_LOCATION_UNAVAILABLE}\n\t\t\t\t\talt={`Current location ${locationAvailable ? \"available\" : \"unavailable\"}`}\n\t\t\t\t/>\n\t\t\t</ButtonLocation>\n\t\t</LocationPickerWrapper>\n\t);\n};\n","export const CURRENT_LOCATION_UNAVAILABLE =\n\t\"https://assets.life.gov.sg/web-frontend-engine/img/icons/current-location-unavailable.svg\";\nexport const CURRENT_LOCATION = \"https://assets.life.gov.sg/web-frontend-engine/img/icons/current-location.svg\";\nexport const LOCATION_PIN_BLUE = \"https://assets.life.gov.sg/web-frontend-engine/img/icons/location-pin-blue.svg\";\n","import { useRef, useState, useCallback } from 'react';\n\nfunction createObserverCache() {\n  var cachesByRoot = new Map();\n\n  function getObserver(_ref) {\n    var root = _ref.root,\n        rootMargin = _ref.rootMargin,\n        threshold = _ref.threshold;\n    var cacheByRoot = cachesByRoot.get(root);\n\n    if (!cacheByRoot) {\n      cacheByRoot = new Map();\n      cachesByRoot.set(root, cacheByRoot);\n    }\n\n    var cacheKey = JSON.stringify({\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    var cachedObserver = cacheByRoot.get(cacheKey);\n\n    if (!cachedObserver) {\n      var entryCallbacks = new Map();\n      var observer = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var callback = entryCallbacks.get(entry.target);\n          callback == null ? void 0 : callback(entry);\n        });\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold\n      });\n      cachedObserver = {\n        observer: observer,\n        entryCallbacks: entryCallbacks\n      };\n      cacheByRoot.set(cacheKey, cachedObserver);\n    }\n\n    return {\n      observe: function observe(node, callback) {\n        var _cachedObserver, _cachedObserver2;\n\n        (_cachedObserver = cachedObserver) == null ? void 0 : _cachedObserver.entryCallbacks.set(node, callback);\n        (_cachedObserver2 = cachedObserver) == null ? void 0 : _cachedObserver2.observer.observe(node);\n      },\n      unobserve: function unobserve(node) {\n        var _cachedObserver3, _cachedObserver4;\n\n        (_cachedObserver3 = cachedObserver) == null ? void 0 : _cachedObserver3.entryCallbacks[\"delete\"](node);\n        (_cachedObserver4 = cachedObserver) == null ? void 0 : _cachedObserver4.observer.unobserve(node);\n      }\n    };\n  }\n\n  return {\n    getObserver: getObserver\n  };\n}\n\nvar DEFAULT_ROOT_MARGIN = '0px';\nvar DEFAULT_THRESHOLD = [0];\nvar observerCache = /*#__PURE__*/createObserverCache(); // For more info:\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\nfunction useIntersectionObserver(args) {\n  var _args$rootMargin, _args$threshold;\n\n  var rootMargin = (_args$rootMargin = args == null ? void 0 : args.rootMargin) != null ? _args$rootMargin : DEFAULT_ROOT_MARGIN;\n  var threshold = (_args$threshold = args == null ? void 0 : args.threshold) != null ? _args$threshold : DEFAULT_THRESHOLD;\n  var nodeRef = useRef(null);\n  var rootRef = useRef(null);\n  var observerRef = useRef(null);\n\n  var _useState = useState(),\n      entry = _useState[0],\n      setEntry = _useState[1];\n\n  var observe = useCallback(function () {\n    var node = nodeRef.current;\n\n    if (!node) {\n      setEntry(undefined);\n      return;\n    }\n\n    var observer = observerCache.getObserver({\n      root: rootRef.current,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    observer.observe(node, function (observedEntry) {\n      setEntry(observedEntry);\n    });\n    observerRef.current = observer;\n  }, [rootMargin, threshold]);\n  var unobserve = useCallback(function () {\n    var currentObserver = observerRef.current;\n    var node = nodeRef.current;\n\n    if (node) {\n      currentObserver == null ? void 0 : currentObserver.unobserve(node);\n    }\n\n    observerRef.current = null;\n  }, []); // React will call the ref callback with the DOM element when the component mounts,\n  // and call it with null when it unmounts.\n  // So, we don't need an useEffect etc to unobserve nodes.\n  // When nodeRef.current is null, it will be unobserved and observe function\n  // won't do anything.\n\n  var refCallback = useCallback(function (node) {\n    unobserve();\n    nodeRef.current = node;\n    observe();\n  }, [observe, unobserve]);\n  var rootRefCallback = useCallback(function (rootNode) {\n    unobserve();\n    rootRef.current = rootNode;\n    observe();\n  }, [observe, unobserve]);\n  return [refCallback, {\n    entry: entry,\n    rootRef: rootRefCallback\n  }];\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction useTrackVisibility(args) {\n  var _result$entry;\n\n  var _useIntersectionObser = useIntersectionObserver(args),\n      ref = _useIntersectionObser[0],\n      result = _useIntersectionObser[1];\n\n  var isVisible = Boolean((_result$entry = result.entry) == null ? void 0 : _result$entry.isIntersecting);\n\n  var _useState = useState(isVisible),\n      wasEverVisible = _useState[0],\n      setWasEverVisible = _useState[1];\n\n  if (isVisible && !wasEverVisible) {\n    setWasEverVisible(true);\n  }\n\n  return [ref, _extends({}, result, {\n    isVisible: isVisible,\n    wasEverVisible: wasEverVisible\n  })];\n}\n\nexport { useIntersectionObserver, useTrackVisibility };\n//# sourceMappingURL=react-intersection-observer-hook.esm.js.map\n","import styled from \"styled-components\";\n\nexport const InfiniteListItem = styled.div`\n\tpadding: 0.5rem;\n\ttext-align: center;\n`;\n","import styled, { keyframes } from \"styled-components\";\nimport { BAR_HEIGHT, BAR_WIDTH, HEIGHT, TOTAL_BARS, WIDTH } from \"./config\";\n\nexport const Spinner = styled.div`\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: ${WIDTH / 16}rem;\n\theight: ${HEIGHT / 16}rem;\n`;\n\nconst spinnerAnimation = keyframes`\n  0% {\n\tbackground-color: #8e8e93;\n  }\n  100% {\n\tbackground-color: #EEE;\n  }\n`;\n\nexport const SpinnerBar = styled.div`\n\ttransform-origin: ${WIDTH / 16 / 2}rem ${HEIGHT / 16 / 2}rem;\n\n\t&::after {\n\t\tcontent: \" \";\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0.125rem;\n\t\tleft: ${(WIDTH - BAR_WIDTH) / 16 / 2}rem;\n\t\twidth: ${BAR_WIDTH / 16}rem;\n\t\theight: ${BAR_HEIGHT / 16}rem;\n\t\tborder-radius: ${BAR_WIDTH / 2 / 16}rem;\n\t\tanimation: ${spinnerAnimation} ${TOTAL_BARS / 10}s linear infinite;\n\t}\n\n\t${Array(TOTAL_BARS)\n\t\t.fill(\"\")\n\t\t.map((foo, i) => {\n\t\t\treturn `\n\t\t\t\t&:nth-child(${i + 1}) {\n\t\t\t\t\ttransform: rotate(${(i * 360) / TOTAL_BARS}deg);\n\t\t\t\t}\n\n\t\t\t\t&:nth-child(${i + 1})::after {\n\t\t\t\t\tanimation-delay: -${(TOTAL_BARS - i) / 10}s;\n\t\t\t\t}\n\t\t\t`;\n\t\t})}\n`;\n","export const WIDTH = 24;\nexport const HEIGHT = 24;\nexport const BAR_WIDTH = 3;\nexport const BAR_HEIGHT = 6.5;\nexport const TOTAL_BARS = 8;\n","import React from \"react\";\nimport { TOTAL_BARS } from \"./config\";\nimport { Spinner, SpinnerBar } from \"./loading-indicator.styles\";\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const LoadingIndicator = (props: Props) => {\n\treturn (\n\t\t<Spinner {...props}>\n\t\t\t{Array(TOTAL_BARS)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((foo, i) => (\n\t\t\t\t\t<SpinnerBar key={i} />\n\t\t\t\t))}\n\t\t</Spinner>\n\t);\n};\n","import useInfiniteScroll from \"react-infinite-scroll-hook\";\nimport { InfiniteListItem } from \"./infinite-scroll.style\";\nimport { LoadingIndicator } from \"./loading-indicator\";\n\nexport type InfiniteScrollProp = {\n\tloading: boolean;\n\thasNextPage: boolean;\n\tloadMore: VoidFunction;\n\titems: JSX.Element[];\n\n\tdisabled?: boolean;\n\tdelayInMs?: number;\n\trootMargin?: string;\n\terror?: boolean | undefined;\n};\n\nexport const InfiniteScrollList = (props: InfiniteScrollProp): JSX.Element => {\n\tconst { loading, items, hasNextPage, error, loadMore, rootMargin = \"0px 0px 50px 0px\" } = props;\n\n\tconst [sentryRef] = useInfiniteScroll({\n\t\tloading,\n\t\thasNextPage,\n\t\tonLoadMore: loadMore,\n\t\t// When there is an error, we stop infinite loading.\n\t\t// It can be reactivated by setting \"error\" state as undefined.\n\t\tdisabled: !!error,\n\t\t// `rootMargin` is passed to `IntersectionObserver`.\n\t\t// We can use it to trigger 'onLoadMore' when the sentry comes near to become\n\t\t// visible, instead of becoming fully visible on the screen.\n\t\trootMargin: rootMargin,\n\t});\n\treturn (\n\t\t<>\n\t\t\t{items}\n\t\t\t{(loading || hasNextPage) && (\n\t\t\t\t<InfiniteListItem data-testid={\"InfiniteScrollList__InfiniteListItem-sentryRef\"} ref={sentryRef}>\n\t\t\t\t\t<LoadingIndicator />\n\t\t\t\t</InfiniteListItem>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { useEffect } from 'react';\nimport { useTrackVisibility } from 'react-intersection-observer-hook';\n\nvar DEFAULT_DELAY_IN_MS = 100;\n\nfunction useInfiniteScroll(_ref) {\n  var loading = _ref.loading,\n      hasNextPage = _ref.hasNextPage,\n      onLoadMore = _ref.onLoadMore,\n      rootMargin = _ref.rootMargin,\n      disabled = _ref.disabled,\n      _ref$delayInMs = _ref.delayInMs,\n      delayInMs = _ref$delayInMs === void 0 ? DEFAULT_DELAY_IN_MS : _ref$delayInMs;\n\n  var _useTrackVisibility = useTrackVisibility({\n    rootMargin: rootMargin\n  }),\n      ref = _useTrackVisibility[0],\n      _useTrackVisibility$ = _useTrackVisibility[1],\n      rootRef = _useTrackVisibility$.rootRef,\n      isVisible = _useTrackVisibility$.isVisible;\n\n  var shouldLoadMore = !disabled && !loading && isVisible && hasNextPage; // eslint-disable-next-line consistent-return\n\n  useEffect(function () {\n    if (shouldLoadMore) {\n      // When we trigger 'onLoadMore' and new items are added to the list,\n      // right before they become rendered on the screen, 'loading' becomes false\n      // and 'isVisible' can be true for a brief time, based on the scroll position.\n      // So, it triggers 'onLoadMore' just after the first one is finished.\n      // We use a small delay here to prevent this kind of situations.\n      // It can be configured by hook args.\n      var timer = setTimeout(function () {\n        onLoadMore();\n      }, delayInMs);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [onLoadMore, shouldLoadMore, delayInMs]);\n  return [ref, {\n    rootRef: rootRef\n  }];\n}\n\nexport default useInfiniteScroll;\n//# sourceMappingURL=react-infinite-scroll-hook.esm.js.map\n","import { IResultListItem } from \"../..\";\n\nexport const pagination = <T>(array: T[], pageSize: number, pageNum: number) => {\n\treturn array.slice((pageNum - 1) * pageSize, pageNum * pageSize);\n};\n\nexport const boldResultsWithQuery = (arr: IResultListItem[], query: string) => {\n\tconst regex = new RegExp(query, \"gi\");\n\treturn arr.map((obj) => {\n\t\tconst newAddress = (obj.displayAddressText || obj.address).replace(\n\t\t\tregex,\n\t\t\t`<span class=\"keyword\">${query}</span>`\n\t\t);\n\t\treturn {\n\t\t\t...obj,\n\t\t\tdisplayAddressText: newAddress,\n\t\t};\n\t});\n};\n","import styled from \"styled-components\";\nimport { Button, Color, MediaQuery, MediaWidths, Text } from \"@lifesg/react-design-system\";\nimport { CrossIcon } from \"@lifesg/react-icons/cross\";\nimport { TPanelInputMode } from \"../../types\";\n\ninterface ISinglePanelStyle {\n\tpanelInputMode: TPanelInputMode;\n}\n\nexport const SearchWrapper = styled.div<ISinglePanelStyle>`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tpadding: 2rem 1.5rem 1rem;\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tflex: unset;\n\t\theight: ${({ panelInputMode }) => (panelInputMode === \"search\" ? `100%` : `auto`)};\n\t\tpadding: 1.5rem 1.25rem 0;\n\t}\n`;\n\nexport const SearchBarContainer = styled.div<{ hasScrolled?: boolean }>`\n\tposition: relative;\n\tdisplay: flex;\n\tgap: 0.5rem;\n\tpadding-bottom: 0.4rem;\n\talight-items: center;\n\tjustify-content: space-between;\n\tborder-bottom: 1px solid ${Color.Neutral[5]};\n\tclip-path: inset(0 0 -0.3rem 0);\n\ttransition: box-shadow 0.3s linear;\n\n\t${({ hasScrolled }) => (hasScrolled ? `box-shadow: 0 0.06rem 0.4rem rgba(0,0,0,.12);` : \"\")}\n\n\t&:focus-within {\n\t\tborder-bottom: 1px solid ${Color.Accent.Light[1]};\n\t}\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tmargin: 0.8rem 0 0;\n\t}\n`;\n\nexport const SearchBarIconButton = styled.button`\n\tdisplay: flex;\n\twidth: fit-content;\n\talign-items: center;\n\tbackground: none;\n\tborder: none;\n\tpadding: 0;\n\tmargin: 0;\n\tcursor: pointer;\n`;\n\nexport const SearchBarIcon = styled.img`\n\twidth: 1rem;\n\theight: auto;\n`;\n\nexport const SearchBarInput = styled.input`\n\tborder: none;\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tfont-size: 1rem;\n\toutline: none;\n\n\t::placeholder,\n\t::-webkit-input-placeholder {\n\t\tcolor: ${Color.Neutral[4]};\n\t}\n`;\n\nexport const SearchBarModalCross = styled(CrossIcon)`\n\tdisplay: none;\n\tfont-size: 1.5rem;\n\tcolor: ${Color.Primary};\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tdisplay: block;\n\t\tmargin: -0.4rem 0 0 -0.4rem;\n\t}\n`;\n\nexport const SearchBarCross = styled(CrossIcon)`\n\tfont-size: 1.7rem;\n\tcolor: ${Color.Neutral[4]};\n`;\n\nexport const ResultWrapper = styled.div<ISinglePanelStyle>`\n\toverflow-y: auto;\n\tflex: 1;\n\tborder-bottom: solid 1px ${Color.Neutral[5]};\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tdisplay: ${({ panelInputMode }) => (panelInputMode !== \"map\" ? `block` : `none`)};\n\t\tborder-bottom: 0;\n\t}\n`;\n\nexport const ResultTitle = styled(Text.H5)`\n\tborder-bottom: 1px solid ${Color.Neutral[5]};\n\tpadding: 1rem 0;\n`;\n\nexport const NoResultTitle = styled(Text.BodySmall)`\n\tpadding-top: 1rem;\n\tcolor: ${Color.Neutral[4]};\n\tword-break: break-all;\n\toverflow-y: scroll;\n`;\n\nexport const ResultItem = styled.div<{ active?: boolean }>`\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 1rem;\n\tpadding: 1rem 1rem 1rem 0;\n\tborder-bottom: 1px solid ${Color.Neutral[5]};\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tbackground-color: ${({ active }) => (active ? Color.Accent.Light[5] : `transparent`)};\n\n\t.keyword {\n\t\tfont-family: \"Open Sans Semibold\";\n\t}\n`;\n\nexport const ResultItemPin = styled.img`\n\twidth: 1rem;\n`;\n\nexport const ButtonWrapper = styled.div<ISinglePanelStyle>`\n\tdisplay: flex;\n\tjustify-content: center;\n\tgap: 1rem;\n\tpadding-top: 1rem;\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\tdisplay: ${({ panelInputMode }) => (panelInputMode === \"map\" ? `block` : `none`)};\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\tpadding: 1.5rem 1.25rem 1.93rem;\n\t}\n`;\n\nexport const ButtonItem = styled(Button.Default)<{ buttonType: \"cancel\" | \"confirm\" }>`\n\twidth: 9.5rem;\n\n\t${MediaQuery.MaxWidth.tablet}, (orientation: landscape) and (max-height: ${MediaWidths.mobileL}px) {\n\t\t${({ buttonType }) => buttonType === \"cancel\" && `display: none`}\n\t\t${({ buttonType }) => buttonType === \"confirm\" && `width: 100%`}\n\t}\n`;\n","import { isEmpty } from \"lodash\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { OneMapBoolean, OneMapError } from \"../../../../../services/onemap/types\";\nimport { TestHelper } from \"../../../../../utils\";\nimport { useFieldEvent } from \"../../../../../utils/hooks\";\nimport { Prompt, Sanitize } from \"../../../../shared\";\nimport { LocationHelper } from \"../../location-helper\";\nimport {\n\tGeolocationPositionErrorWrapper,\n\tIDisplayResultListParams,\n\tIResultListItem,\n\tIResultsMetaData,\n\tTErrorType,\n\tTLocationFieldErrorDetail,\n\tTSetCurrentLocationDetail,\n} from \"../../types\";\nimport { InfiniteScrollList } from \"../infinite-scroll\";\nimport { boldResultsWithQuery, pagination } from \"./helper\";\nimport { LOCATION_PIN_BLACK, SEARCH_SVG } from \"./location-search.data\";\nimport {\n\tButtonItem,\n\tButtonWrapper,\n\tNoResultTitle,\n\tResultItem,\n\tResultItemPin,\n\tResultTitle,\n\tResultWrapper,\n\tSearchBarContainer,\n\tSearchBarCross,\n\tSearchBarIcon,\n\tSearchBarIconButton,\n\tSearchBarInput,\n\tSearchBarModalCross,\n\tSearchWrapper,\n} from \"./location-search.styles\";\nimport { ILocationSearchProps } from \"./types\";\n\nexport const LocationSearch = ({\n\tid = \"location-search\",\n\tformValues,\n\tgettingCurrentLocation,\n\n\tshowLocationModal,\n\tmustHavePostalCode,\n\n\tpanelInputMode,\n\tselectedAddressInfo,\n\tmapPickedLatLng,\n\n\treverseGeoCodeEndpoint,\n\taddressFieldPlaceholder = \"Street Name, Postal Code\",\n\tgettingCurrentLocationFetchMessage = \"Getting current location...\",\n\tlocationListTitle = \"Select location\",\n\n\thandleApiErrors,\n\n\tonGetLocationCallback,\n\n\t// set map mode\n\t// reset user click map\n\t// trigger smth in search\n\t// - no references\n\t// trigger smth in picker\n\t// - zoom with markers\n\tonChangeSelectedAddressInfo,\n\tonCancel,\n\tonConfirm,\n\n\tsetSinglePanelMode,\n\tupdateFormValues,\n}: ILocationSearchProps) => {\n\t// =============================================================================\n\t// CONST, STATE, REFS\n\t// =============================================================================\n\tconst { addFieldEventListener, removeFieldEventListener } = useFieldEvent();\n\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\tconst resultRef = useRef<HTMLDivElement>(null);\n\tconst reverseGeocodeAborter = useRef<AbortController | null>(null);\n\n\tconst [hasScrolled, setHasScrolled] = useState(false);\n\tconst [queryString, setQueryString] = useState(\"\");\n\tconst [showPostalCodeError, setShowPostalCodeError] = useState(false);\n\n\t// searching\n\tconst [resultState, setResultState] = useState<\"pristine\" | \"found\" | \"not-found\">(\"pristine\");\n\n\t// USED TO SHOW AS SEARCH RESULTS\n\tconst [loading, setLoading] = useState(false);\n\tconst [selectedIndex, setSelectedIndex] = useState(-1);\n\tconst [searchBuildingResults, setSearchBuildingResults] = useState<IResultListItem[]>([]);\n\tconst [apiResults, setAPIResults] = useState<IResultListItem[]>([]);\n\n\t// pagination logic\n\tconst PAGE_SIZE = 10;\n\tconst [hasNextPage, setHasNextPage] = useState(false);\n\tconst [totalNumPages, setTotalNumPages] = useState(0);\n\tconst [apiPageNum, setAPIPageNum] = useState(1);\n\tconst [currentPaginationPageNum, setCurrentPaginationPageNum] = useState(1);\n\tconst { debounceFetchAddress, fetchSingleLocationByAddress, fetchSingleLocationByLatLng, fetchLocationList } =\n\t\tLocationHelper;\n\n\tconst { dispatchFieldEvent } = useFieldEvent();\n\t// =============================================================================\n\t// EFFECTS\n\t// =============================================================================\n\t// check if any of the services is working\n\tuseEffect(() => {\n\t\tif (!showLocationModal) return;\n\t\t// check if one map or reverse code is working\n\t\t// - get location error\n\t\t// - first load\n\t\t// the map should not be usable if any of these services fail\n\t\tconst reverseGeoCodeCheck = async () => {\n\t\t\ttry {\n\t\t\t\tLocationHelper.reverseGeocode({\n\t\t\t\t\troute: reverseGeoCodeEndpoint,\n\t\t\t\t\tlatitude: 1.29994179707526,\n\t\t\t\t\tlongitude: 103.789404349716,\n\t\t\t\t\tbufferRadius: 1,\n\t\t\t\t\tabortSignal: reverseGeocodeAborter.current.signal,\n\t\t\t\t\totherFeatures: OneMapBoolean.YES,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\thandleApiErrors(new OneMapError(error));\n\t\t\t}\n\t\t};\n\t\tPromise.all([debounceFetchAddress(\"singapore\", 1, undefined, handleApiErrors), reverseGeoCodeCheck()]);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!navigator.onLine) return;\n\t\t// internet restored\n\t\tif (!queryString && selectedAddressInfo?.lat && selectedAddressInfo?.lng) {\n\t\t\tdisplayResultsFromLatLng(selectedAddressInfo.lat, selectedAddressInfo.lng);\n\t\t\treturn;\n\t\t}\n\t}, [navigator.onLine]);\n\n\t// Attach event handlers\n\tuseEffect(() => {\n\t\tconst setCurrentLocationHandler = ({ detail: { payload, errors } }: CustomEvent<TSetCurrentLocationDetail>) => {\n\t\t\tif (errors instanceof Object && errors.code !== undefined) {\n\t\t\t\thandleApiErrors(new GeolocationPositionErrorWrapper(errors));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isEmpty(errors)) {\n\t\t\t\thandleApiErrors(errors);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO: no op or error?\n\t\t\tif (!payload?.lat || !payload?.lng) return;\n\n\t\t\tconst { lat, lng } = payload;\n\t\t\tdisplayResultsFromLatLng(lat, lng);\n\t\t\tonGetLocationCallback(lat, lng);\n\t\t};\n\n\t\taddFieldEventListener(\"set-current-location\", id, setCurrentLocationHandler);\n\n\t\treturn () => {\n\t\t\tremoveFieldEventListener(\"set-current-location\", id, setCurrentLocationHandler);\n\t\t};\n\t}, []);\n\n\t/**\n\t * Prefill based on lat lng or address with the appropriate api\n\t */\n\tuseEffect(() => {\n\t\tconst handleResult = ({ displayAddressText, ...locationFieldValue }: IResultListItem) => {\n\t\t\tconst validPostalCode =\n\t\t\t\t!mustHavePostalCode || LocationHelper.hasGotAddressValue(locationFieldValue.postalCode);\n\n\t\t\tif (isEmpty(locationFieldValue) || !validPostalCode) {\n\t\t\t\tupdateFormValues({});\n\t\t\t\tonChangeSelectedAddressInfo({});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// complete form state with valid location\n\t\t\tupdateFormValues(locationFieldValue);\n\t\t\tonChangeSelectedAddressInfo(locationFieldValue);\n\t\t\tsetQueryString(locationFieldValue.address);\n\t\t};\n\n\t\tif (formValues?.lat && formValues?.lng && formValues?.address) {\n\t\t\t// TODO: trust input or validate formvalue?\n\t\t\tfetchSingleLocationByAddress(formValues.address, handleResult, handleApiErrors);\n\t\t} else if (formValues?.address && !formValues?.lat && !formValues?.lng) {\n\t\t\tfetchSingleLocationByAddress(formValues.address, handleResult, handleApiErrors);\n\t\t} else if (reverseGeoCodeEndpoint && !formValues?.address && formValues?.lat && formValues?.lng) {\n\t\t\tfetchSingleLocationByLatLng(\n\t\t\t\treverseGeoCodeEndpoint,\n\t\t\t\tformValues.lat,\n\t\t\t\tformValues.lng,\n\t\t\t\thandleResult,\n\t\t\t\thandleApiErrors\n\t\t\t);\n\t\t}\n\t}, []);\n\n\t/**\n\t * Gets the address of the location with lat lng when user clicks on the map\n\t */\n\tuseEffect(() => {\n\t\tif (!mapPickedLatLng?.lat || !mapPickedLatLng?.lng) return;\n\t\tdisplayResultsFromLatLng(mapPickedLatLng.lat, mapPickedLatLng.lng);\n\t}, [mapPickedLatLng?.lat, mapPickedLatLng?.lng]);\n\n\t/**\n\t * Handles query searching and search results display\n\t */\n\tuseEffect(() => {\n\t\tif (resultState === \"found\") return;\n\t\tconst parsedString = validateQueryString(queryString);\n\t\tif (!parsedString) return resetResultsList();\n\t\tif (\n\t\t\t(inputRef.current?.value !== gettingCurrentLocationFetchMessage &&\n\t\t\t\tinputRef.current?.value !== selectedAddressInfo?.address) ||\n\t\t\tresultState === \"pristine\"\n\t\t) {\n\t\t\tsetLoading(true);\n\t\t}\n\n\t\tdebounceFetchAddress(\n\t\t\tparsedString,\n\t\t\t1,\n\t\t\t(res: IResultsMetaData) => {\n\t\t\t\tif (selectedAddressInfo?.address === parsedString) {\n\t\t\t\t\tsetSelectedIndex(0);\n\t\t\t\t} else {\n\t\t\t\t\tsetSelectedIndex(-1);\n\t\t\t\t}\n\n\t\t\t\t// paginated\n\t\t\t\tpopulateDisplayList({\n\t\t\t\t\tresults: res.results,\n\t\t\t\t\tqueryString,\n\t\t\t\t\tboldResults: true,\n\t\t\t\t\tapiPageNum: res.apiPageNum,\n\t\t\t\t\ttotalNumPages: res.totalNumPages,\n\t\t\t\t});\n\n\t\t\t\tif (resultRef.current?.scrollTo) {\n\t\t\t\t\tresultRef.current?.scrollTo(0, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tif (error instanceof SyntaxError || error instanceof TypeError) {\n\t\t\t\t\tpopulateDisplayList({ results: [], queryString });\n\t\t\t\t} else {\n\t\t\t\t\tresetResultsList();\n\t\t\t\t\thandleApiErrors(new OneMapError(error));\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}, [PAGE_SIZE, queryString]);\n\n\t// Determine if there are more items to be fetched\n\tuseEffect(() => {\n\t\tsetHasNextPage(false);\n\t\tif (apiPageNum < totalNumPages) {\n\t\t\tsetHasNextPage(true);\n\t\t}\n\t\tif (currentPaginationPageNum < apiResults.length / PAGE_SIZE) {\n\t\t\tsetHasNextPage(true);\n\t\t}\n\t}, [totalNumPages, apiPageNum, currentPaginationPageNum, apiResults.length, PAGE_SIZE]);\n\n\t// =============================================================================\n\t// EVENT HANDLERS\n\t// =============================================================================\n\tconst handleClickCancel = () => {\n\t\tconst validFormLocation = formValues?.address && formValues?.lat && formValues?.lng;\n\t\tif (validFormLocation) {\n\t\t\tsetQueryString(formValues.address);\n\t\t} else {\n\t\t\tsetQueryString(\"\");\n\t\t\tresetResultsList();\n\t\t}\n\n\t\tsetResultState(\"pristine\");\n\t\tonCancel();\n\t};\n\n\tconst handleInputFocus = () => {\n\t\tinputRef.current?.focus();\n\t\tif (searchBuildingResults.length > 0) {\n\t\t\tsetSinglePanelMode(\"search\");\n\t\t}\n\t};\n\n\tconst handleInputChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst value = event.target.value;\n\t\tsetQueryString(value);\n\t\tsetResultState(\"pristine\");\n\t\tsetSinglePanelMode(\"search\");\n\t};\n\n\tconst handleClearInput = () => {\n\t\tsetQueryString(\"\");\n\t\tsetResultState(\"pristine\");\n\t\tsetSinglePanelMode(\"map\");\n\t};\n\n\tconst handleClickResult = (listitem: IResultListItem, index: number) => {\n\t\tconst { displayAddressText, ...locationFieldValue } = listitem;\n\t\tif (mustHavePostalCode && !LocationHelper.hasGotAddressValue(locationFieldValue.postalCode)) {\n\t\t\thandleError(\"PostalCodeError\", () => {\n\t\t\t\tsetShowPostalCodeError(true);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsetResultState(\"found\");\n\t\tsetSelectedIndex(index);\n\t\tsetQueryString(locationFieldValue.address ?? \"\");\n\t\tonChangeSelectedAddressInfo(locationFieldValue);\n\t};\n\n\tconst handleScrollResult = () => {\n\t\tif (resultRef.current) {\n\t\t\tif (resultRef.current?.scrollTop > 0 && !hasScrolled) {\n\t\t\t\tsetHasScrolled(true);\n\t\t\t} else if (resultRef.current?.scrollTop <= 0 && hasScrolled) {\n\t\t\t\tsetHasScrolled(false);\n\t\t\t}\n\t\t}\n\t};\n\n\t// =============================================================================\n\t// HELPER FUNCTIONS\n\t// =============================================================================\n\tconst handleError = (errorType: TErrorType[\"errorType\"], defaultHandle: () => void) => {\n\t\tconst shouldPreventDefault = !dispatchFieldEvent<TLocationFieldErrorDetail>(\"error\", id, {\n\t\t\tpayload: {\n\t\t\t\terrorType,\n\t\t\t},\n\t\t});\n\n\t\tif (shouldPreventDefault) return;\n\t\tdefaultHandle();\n\t};\n\n\tconst resetResultsList = () => {\n\t\tsetSelectedIndex(-1);\n\t\tsetCurrentPaginationPageNum(1);\n\t\tsetTotalNumPages(0);\n\t\tsetAPIPageNum(0);\n\t\tsetAPIResults([]);\n\t\tsetSearchBuildingResults([]);\n\t\tif (resultRef.current?.scrollTo) {\n\t\t\tresultRef.current?.scrollTo(0, 0);\n\t\t}\n\t};\n\n\t/**\n\t * two get more address use case\n\t * if you are searching by fetch address\n\t * - searching through input field\n\t * there will be pagination through the api\n\t *\n\t * if your are searching by reverse geocode endpoint\n\t * clicking on map\n\t * all the data will be fetched\n\t */\n\tconst getMoreLocationResults = () => {\n\t\tsetLoading(true);\n\n\t\tif (searchBuildingResults.length < apiResults.length) {\n\t\t\tconst newCurrentPageNum = currentPaginationPageNum + 1;\n\t\t\tsetCurrentPaginationPageNum(newCurrentPageNum);\n\t\t\tconst data = pagination(apiResults, PAGE_SIZE, newCurrentPageNum);\n\t\t\tconst boldData = boldResultsWithQuery(data, queryString);\n\t\t\tsetSearchBuildingResults(searchBuildingResults.concat(boldData));\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tdebounceFetchAddress(\n\t\t\t\tqueryString,\n\t\t\t\tapiPageNum + 1,\n\t\t\t\t(res) => {\n\t\t\t\t\tconst results = boldResultsWithQuery(res.results, queryString);\n\t\t\t\t\tif (results.length > PAGE_SIZE) {\n\t\t\t\t\t\tconst data = pagination(results, PAGE_SIZE, 1);\n\t\t\t\t\t\tsetSearchBuildingResults(searchBuildingResults.concat(data));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSearchBuildingResults(searchBuildingResults.concat(results));\n\t\t\t\t\t}\n\n\t\t\t\t\tsetAPIResults(apiResults.concat(results));\n\t\t\t\t\tsetTotalNumPages(res.totalNumPages);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetAPIPageNum(res.apiPageNum);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tresetResultsList();\n\t\t\t\t\thandleApiErrors(new OneMapError(error));\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Used when\n\t * - getting current location\n\t * - internet restored\n\t * - map picked latlng\n\t */\n\tconst displayResultsFromLatLng = async (addressLat: number, addressLng: number) => {\n\t\tif (!reverseGeoCodeEndpoint) return;\n\t\tconst onError = (error: any) => {\n\t\t\tsetQueryString(\"\");\n\t\t\thandleApiErrors(error);\n\t\t};\n\n\t\tlet resultListItem: IResultListItem[];\n\t\ttry {\n\t\t\tresultListItem = await fetchLocationList(\n\t\t\t\treverseGeoCodeEndpoint,\n\t\t\t\taddressLat,\n\t\t\t\taddressLng,\n\t\t\t\tmustHavePostalCode,\n\t\t\t\treverseGeocodeAborter,\n\t\t\t\tonError,\n\t\t\t\ttrue\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (resultListItem.length === 0) {\n\t\t\tsetQueryString(\"\");\n\t\t\tconst shouldPanToCurrentLocation =\n\t\t\t\tselectedAddressInfo.lat !== addressLat || selectedAddressInfo.lng !== addressLng;\n\t\t\tif (shouldPanToCurrentLocation) {\n\t\t\t\tonChangeSelectedAddressInfo({\n\t\t\t\t\tlat: addressLat,\n\t\t\t\t\tlng: addressLng,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tresultRef.current?.scrollTo(0, 0);\n\t\tpopulateDisplayList({ results: resultListItem });\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tconst [{ displayAddressText, ...firstItem }] = resultListItem;\n\n\t\tif (mustHavePostalCode && !LocationHelper.hasGotAddressValue(firstItem.address)) {\n\t\t\tsetShowPostalCodeError(true);\n\t\t\tsetQueryString(\"\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueryString(firstItem.address);\n\n\t\tonChangeSelectedAddressInfo(firstItem);\n\t\tsetSelectedIndex(0);\n\t};\n\n\t/**\n\t * Handles how much to initially show\n\t * Configures pagination\n\t * Stores proper state\n\t */\n\tconst populateDisplayList = (params: IDisplayResultListParams) => {\n\t\tconst { results, boldResults, apiPageNum, totalNumPages, queryString } = params;\n\n\t\tlet displayResults = results;\n\t\tif (boldResults && queryString) {\n\t\t\tdisplayResults = boldResultsWithQuery(displayResults, queryString);\n\t\t}\n\n\t\tif (displayResults.length > PAGE_SIZE) {\n\t\t\tconst data = pagination(displayResults, PAGE_SIZE, 1);\n\t\t\tsetSearchBuildingResults(data);\n\t\t} else {\n\t\t\tsetSearchBuildingResults(displayResults);\n\t\t}\n\n\t\tsetAPIResults(results);\n\t\tsetTotalNumPages(totalNumPages || 1);\n\t\tsetLoading(false);\n\t\tsetAPIPageNum(apiPageNum || 1);\n\t\tsetResultState(displayResults.length > 0 ? \"found\" : \"not-found\");\n\t};\n\n\tconst validateQueryString = (stringToQuery: string) => {\n\t\tif (!stringToQuery) return;\n\t\treturn stringToQuery.trim().replace(/^[$\\s]*/, \"\");\n\t};\n\n\t// =============================================================================\n\t// RENDER FUNCTIONS\n\t// =============================================================================\n\tconst renderList = () => {\n\t\treturn searchBuildingResults.map((item, index) => (\n\t\t\t<ResultItem\n\t\t\t\tkey={`${index}_${item.lat}_${item.lng}`}\n\t\t\t\tonClick={() => handleClickResult(item, index)}\n\t\t\t\tactive={selectedIndex === index}\n\t\t\t\tid={TestHelper.generateId(`location-search-modal-search-result-${index + 0}`)}\n\t\t\t\tdata-testid={TestHelper.generateId(\n\t\t\t\t\t`location-search-modal-search-result-${index + 0}`,\n\t\t\t\t\tundefined,\n\t\t\t\t\tselectedIndex === index ? \"active\" : undefined\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<ResultItemPin src={LOCATION_PIN_BLACK} alt=\"Location\" />\n\t\t\t\t<Sanitize\n\t\t\t\t\tsanitizeOptions={{\n\t\t\t\t\t\tallowedTags: [\"span\"],\n\t\t\t\t\t\tallowedAttributes: {\n\t\t\t\t\t\t\tspan: [\"class\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{item.displayAddressText}\n\t\t\t\t</Sanitize>\n\t\t\t</ResultItem>\n\t\t));\n\t};\n\n\tconst renderPostalCodeError = () => (\n\t\t<Prompt\n\t\t\tid={`${id}-postal-code-error`}\n\t\t\ttitle=\"Oops\"\n\t\t\tsize=\"large\"\n\t\t\tshow={true}\n\t\t\tdescription=\"The location you have selected does not contain a postal code.\"\n\t\t\tbuttons={[\n\t\t\t\t{\n\t\t\t\t\tid: \"ok\",\n\t\t\t\t\ttitle: \"OK\",\n\t\t\t\t\tonClick: () => setShowPostalCodeError(false),\n\t\t\t\t},\n\t\t\t]}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<SearchWrapper\n\t\t\t\tid={TestHelper.generateId(id, \"location-search\")}\n\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search\")}\n\t\t\t\tpanelInputMode={panelInputMode}\n\t\t\t>\n\t\t\t\t<SearchBarIconButton\n\t\t\t\t\tonClick={handleClickCancel}\n\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-modal-close\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search-modal-close\")}\n\t\t\t\t>\n\t\t\t\t\t<SearchBarModalCross />\n\t\t\t\t</SearchBarIconButton>\n\n\t\t\t\t<SearchBarContainer hasScrolled={hasScrolled}>\n\t\t\t\t\t<SearchBarIconButton\n\t\t\t\t\t\tonClick={handleInputFocus}\n\t\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-modal-search\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SearchBarIcon src={SEARCH_SVG} alt=\"Search\" />\n\t\t\t\t\t</SearchBarIconButton>\n\t\t\t\t\t<SearchBarInput\n\t\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-modal-input\")}\n\t\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search-modal-input\")}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonFocus={handleInputFocus}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tplaceholder={addressFieldPlaceholder}\n\t\t\t\t\t\treadOnly={gettingCurrentLocation}\n\t\t\t\t\t\tvalue={!gettingCurrentLocation ? queryString : gettingCurrentLocationFetchMessage}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SearchBarIconButton\n\t\t\t\t\t\tonClick={handleClearInput}\n\t\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-input-clear\")}\n\t\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search-input-clear\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SearchBarCross type=\"cross\" />\n\t\t\t\t\t</SearchBarIconButton>\n\t\t\t\t</SearchBarContainer>\n\t\t\t\t<ResultWrapper\n\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-results\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search-results\", panelInputMode)}\n\t\t\t\t\tpanelInputMode={panelInputMode}\n\t\t\t\t\tref={resultRef}\n\t\t\t\t\tonScroll={handleScrollResult}\n\t\t\t\t>\n\t\t\t\t\t{!gettingCurrentLocation && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{searchBuildingResults.length ? <ResultTitle>{locationListTitle}</ResultTitle> : null}\n\t\t\t\t\t\t\t<InfiniteScrollList\n\t\t\t\t\t\t\t\titems={renderList()}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\thasNextPage={hasNextPage}\n\t\t\t\t\t\t\t\tloadMore={getMoreLocationResults}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{!loading && resultState === \"not-found\" && (\n\t\t\t\t\t\t\t\t<NoResultTitle>No results found for &ldquo;{queryString}&rdquo;</NoResultTitle>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ResultWrapper>\n\n\t\t\t\t<ButtonWrapper\n\t\t\t\t\tid={TestHelper.generateId(id, \"location-search-controls\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"location-search-controls\")}\n\t\t\t\t\tpanelInputMode={panelInputMode}\n\t\t\t\t>\n\t\t\t\t\t<ButtonItem buttonType=\"cancel\" styleType=\"light\" onClick={handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</ButtonItem>\n\t\t\t\t\t<ButtonItem\n\t\t\t\t\t\tbuttonType=\"confirm\"\n\t\t\t\t\t\tonClick={onConfirm}\n\t\t\t\t\t\tdisabled={selectedIndex < 0 || resultState !== \"found\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t{panelInputMode !== \"double\" ? \"Confirm location\" : \"Confirm\"}\n\t\t\t\t\t</ButtonItem>\n\t\t\t\t</ButtonWrapper>\n\t\t\t</SearchWrapper>\n\t\t\t{showPostalCodeError && renderPostalCodeError()}\n\t\t</>\n\t);\n};\n","export const LOCATION_PIN_BLACK = \"https://assets.life.gov.sg/web-frontend-engine/img/icons/location-pin-black.svg\";\nexport const SEARCH_SVG = \"https://assets.life.gov.sg/web-frontend-engine/img/icons/search.svg\";\n","import { Button } from \"@lifesg/react-design-system/button\";\nimport { MediaQuery } from \"@lifesg/react-design-system/media\";\nimport { Text } from \"@lifesg/react-design-system/text\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\t/* to take full width of modal */\n\tflex: 1;\n`;\n\nexport const Image = styled.img`\n\twidth: 12.5625rem;\n\n\t${MediaQuery.MaxWidth.mobileL} {\n\t\twidth: 11.5rem;\n\t}\n`;\n\nexport const ContentTitle = styled(Text.Body)`\n\ttext-align: center;\n\tmargin: 1.5rem auto 0.5rem;\n\n\t${MediaQuery.MaxWidth.mobileL} {\n\t\tfont-size: 0.875rem !important;\n\t}\n`;\n\nexport const ContentBody = styled(Text.Body)`\n\ttext-align: center;\n\twidth: 100%;\n\n\t${MediaQuery.MaxWidth.mobileL} {\n\t\tfont-size: 0.875rem !important;\n\t\tmax-width: 14rem;\n\t}\n`;\n\nexport const ButtonWrapper = styled(Button.Default)`\n\tmargin-top: 2.5rem;\n\twidth: 100%;\n\tmax-width: 16.5rem;\n\n\t${MediaQuery.MaxWidth.mobileL} {\n\t\tmax-width: 16.5rem;\n\t}\n`;\n","import React from \"react\";\nimport { ButtonWrapper, Container, ContentBody, ContentTitle, Image } from \"./no-network-modal.styles\";\nimport { TestHelper } from \"../../../../../utils\";\n\ninterface INoNetworkModal {\n\tid: string;\n\tcachedImage: string;\n\trefreshNetwork: () => void;\n}\n\nconst NoNetworkModal = ({ id, cachedImage, refreshNetwork }: INoNetworkModal) => {\n\treturn (\n\t\t<Container\n\t\t\tid={TestHelper.generateId(id, \"no-internet-connectivity\")}\n\t\t\tdata-testid={TestHelper.generateId(id, \"no-internet-connectivity\")}\n\t\t>\n\t\t\t<Image src={cachedImage} alt=\"no-connectivity\" />\n\t\t\t<ContentTitle weight=\"semibold\">No connection found</ContentTitle>\n\t\t\t<ContentBody>Check your internet connection and try again.</ContentBody>\n\t\t\t<ButtonWrapper onClick={refreshNetwork}>Try again</ButtonWrapper>\n\t\t</Container>\n\t);\n};\n\nexport default NoNetworkModal;\n","import { MediaWidths, Modal } from \"@lifesg/react-design-system\";\nimport { isEmpty } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { OneMapError } from \"../../../../services/onemap/types\";\nimport { GeoLocationHelper, TestHelper } from \"../../../../utils\";\nimport { useFieldEvent } from \"../../../../utils/hooks\";\nimport { Prompt } from \"../../../shared\";\nimport { Description } from \"../../../shared/prompt/prompt.styles\";\nimport {\n\tGeolocationPositionErrorWrapper,\n\tILocationCoord,\n\tILocationFieldValues,\n\tTErrorType,\n\tTLocationFieldErrorDetail,\n\tTLocationFieldEvents,\n\tTPanelInputMode,\n\tTSetCurrentLocationDetail,\n} from \"../types\";\nimport { ERROR_SVG, OFFLINE_IMAGE, TIMEOUT_SVG } from \"./location-modal.data\";\nimport { ErrorImage, ModalBox, PrefetchImage, StyledLocationPicker } from \"./location-modal.styles\";\nimport { LocationSearch } from \"./location-search\";\nimport NoNetworkModal from \"./no-network-modal/no-network-modal\";\nimport { ILocationModalProps } from \"./types\";\n\n/**\n * Location modal screen variation\n * Mobile or tablet - single panel\n * Desktop - double panel\n */\nconst LocationModal = ({\n\tid = \"location-modal\",\n\tclassName,\n\tformValues,\n\tshowLocationModal,\n\tmapPanZoom,\n\tinteractiveMapPinIconUrl,\n\treverseGeoCodeEndpoint,\n\tgettingCurrentLocationFetchMessage,\n\tmustHavePostalCode,\n\tlocationModalStyles,\n\tonClose,\n\tonConfirm,\n\tupdateFormValues,\n}: ILocationModalProps) => {\n\t// =============================================================================\n\t// CONST, STATE, REFS\n\t// =============================================================================\n\tconst [panelInputMode, setPanelInputMode] = useState<TPanelInputMode>(\"double\");\n\n\t// Temporarily hold the selection\n\t// onConfirm we will save to state\n\t// if cancel, this value will need to be reset to form state value\n\tconst [selectedAddressInfo, setSelectedAddressInfo] = useState<ILocationFieldValues>({});\n\n\tconst [locationAvailable, setLocationAvailable] = useState(true);\n\n\tconst [gettingCurrentLocation, setGettingCurrentLocation] = useState(false);\n\tconst { dispatchFieldEvent, addFieldEventListener, removeFieldEventListener } = useFieldEvent();\n\n\tconst [hasInternetConnectivity, setHasInternetConnectivity] = useState(true);\n\tconst [showGetLocationError, setShowGetLocationError] = useState(false);\n\tconst [showOneMapError, setShowOneMapError] = useState(false);\n\tconst [showGetLocationTimeoutError, setShowGetLocationTimeoutError] = useState(false);\n\n\t// map picked lat lng vs selectedAddressInfo\n\t// map picked value can be falsy/ no address found\n\t// selectedAddressInfo have valid addresses from one map\n\tconst [mapPickedLatLng, setMapPickedLatLng] = useState<ILocationCoord>();\n\n\t// =============================================================================\n\t// EFFECTS\n\t// =============================================================================\n\tuseEffect(() => {\n\t\tconst handleError = (e: TLocationFieldEvents[\"error-end\"]) => {\n\t\t\tconst errorType = e.detail?.payload?.errorType;\n\t\t\tif (!errorType) return;\n\n\t\t\tswitch (errorType) {\n\t\t\t\tcase \"OneMapError\":\n\t\t\t\tcase \"GetLocationTimeoutError\":\n\t\t\t\t\thandleCloseLocationModal();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"GetLocationError\":\n\t\t\t\tcase \"PostalCodeError\":\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\taddFieldEventListener(\"error-end\", id, handleError);\n\n\t\treturn () => {\n\t\t\tremoveFieldEventListener(\"error-end\", id, handleError);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!window) return;\n\n\t\tconst mql = matchMedia(`(max-width: ${MediaWidths.tablet}px)`);\n\t\tsetPanelInputMode(mql.matches ? \"map\" : \"double\");\n\n\t\tconst handleHasInternetConnectivity = () => setHasInternetConnectivity(true);\n\t\tconst handleNoInternetConnectivity = () => setHasInternetConnectivity(false);\n\t\t// TODO handle when there is querystring\n\t\tconst handleResize = (e: MediaQueryListEvent) => {\n\t\t\tsetPanelInputMode(e.matches ? \"map\" : \"double\");\n\t\t};\n\n\t\twindow.addEventListener(\"online\", handleHasInternetConnectivity);\n\t\twindow.addEventListener(\"offline\", handleNoInternetConnectivity);\n\t\tmql.addEventListener(\"change\", handleResize);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"online\", handleHasInternetConnectivity);\n\t\t\twindow.removeEventListener(\"offline\", handleNoInternetConnectivity);\n\t\t\tmql.removeEventListener(\"change\", handleResize);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!showLocationModal) {\n\t\t\t// Reset to map when one single panel view\n\t\t\tpanelInputMode !== \"double\" && setPanelInputMode(\"map\");\n\t\t\treturn;\n\t\t}\n\t\t/**\n\t\t * We should only getCurrentLocation when nothing is prefilled\n\t\t * when formvalues are prefilled, the useEffect will recenter\n\t\t * the location for us\n\t\t *\n\t\t * This is meant for first entry\n\t\t */\n\t\tif (!formValues?.lat && !formValues?.lng) {\n\t\t\tgetCurrentLocation();\n\t\t}\n\t}, [showLocationModal]);\n\n\t/**\n\t * triggers when\n\t * - selecting search result\n\t * - prefill\n\t */\n\tuseEffect(() => {\n\t\tif (!isEmpty(selectedAddressInfo) && panelInputMode === \"search\") {\n\t\t\tsetSinglePanelMode(\"map\");\n\t\t}\n\t}, [selectedAddressInfo, gettingCurrentLocation]);\n\n\t// =============================================================================\n\t// EVENT HANDLERS\n\t// =============================================================================\n\tconst handleCloseLocationModal = () => {\n\t\tonClose();\n\t};\n\n\tconst handleGetLocationCallback = () => {\n\t\tsetGettingCurrentLocation(false);\n\t\tsetLocationAvailable(true);\n\t};\n\n\tconst handleApiErrors = (error?: any) => {\n\t\tconst handleError = (errorType: TErrorType[\"errorType\"], defaultHandle: () => void) => {\n\t\t\tconst shouldPreventDefault = !dispatchFieldEvent<TLocationFieldErrorDetail>(\"error\", id, {\n\t\t\t\tpayload: {\n\t\t\t\t\terrorType,\n\t\t\t\t},\n\t\t\t\terrors: error,\n\t\t\t});\n\n\t\t\tif (shouldPreventDefault) return;\n\t\t\tdefaultHandle();\n\t\t};\n\n\t\tsetGettingCurrentLocation(false);\n\n\t\tif (error instanceof OneMapError) {\n\t\t\thandleError(\"OneMapError\", () => {\n\t\t\t\trestoreFormvalues();\n\t\t\t\tsetShowOneMapError(true);\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tsetLocationAvailable(false);\n\n\t\tif (\n\t\t\terror instanceof GeolocationPositionErrorWrapper &&\n\t\t\terror?.code?.toString() === GeolocationPositionError.TIMEOUT.toString()\n\t\t) {\n\t\t\thandleError(\"GetLocationTimeoutError\", () => {\n\t\t\t\tsetShowGetLocationTimeoutError(true);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\thandleError(\"GetLocationError\", () => {\n\t\t\tsetShowGetLocationError(true);\n\t\t});\n\t};\n\n\tconst handleCancel = () => {\n\t\trestoreFormvalues();\n\t\thandleCloseLocationModal();\n\t};\n\n\tconst handleConfirm = () => {\n\t\tonConfirm(selectedAddressInfo);\n\t\thandleCloseLocationModal();\n\t};\n\n\tconst handleCloseLocationPermissionModal = () => {\n\t\tsetShowGetLocationError(false);\n\t};\n\n\tconst handleMapClick = (latlng: ILocationCoord) => {\n\t\tsetMapPickedLatLng(latlng);\n\t};\n\n\t// =============================================================================\n\t// HELPER FUNCTIONS\n\t// =============================================================================\n\tconst setSinglePanelMode = (inputMode: TPanelInputMode) => {\n\t\tif (panelInputMode === \"double\") return;\n\t\tsetPanelInputMode(inputMode);\n\t};\n\n\tconst getCurrentLocation = async () => {\n\t\tsetGettingCurrentLocation(true);\n\n\t\t// TODO add documentation for how to cancel events and handle default\n\t\tconst shouldPreventDefault = !dispatchFieldEvent(\"get-current-location\", id);\n\n\t\tif (!shouldPreventDefault) {\n\t\t\tconst detail: TSetCurrentLocationDetail = {};\n\n\t\t\ttry {\n\t\t\t\tdetail[\"payload\"] = await GeoLocationHelper.getCurrentLocation();\n\t\t\t} catch (error) {\n\t\t\t\tdetail[\"errors\"] = error;\n\t\t\t}\n\n\t\t\tdispatchFieldEvent<TSetCurrentLocationDetail>(\"set-current-location\", id, detail);\n\t\t}\n\t};\n\n\t// Manually refresh network if auto refresh has any issue\n\tconst refreshNetwork = () => {\n\t\ttry {\n\t\t\tif (navigator.onLine) {\n\t\t\t\tsetHasInternetConnectivity(true);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// silent error\n\t\t}\n\t};\n\n\tconst restoreFormvalues = () => {\n\t\t// Retain current form values\n\t\tsetSelectedAddressInfo(formValues || {});\n\t};\n\n\t// =============================================================================\n\t// RENDER FUNCTIONS\n\t// =============================================================================\n\tconst renderNetworkErrorPrompt = () => {\n\t\t/**\n\t\t * Do not render any other error if there is no internet connectivity\n\t\t * since the form is not interactive.\n\t\t * When network restored, the form value will used.\n\t\t */\n\t\tif (!hasInternetConnectivity || !showLocationModal) return;\n\n\t\tif (showOneMapError) {\n\t\t\treturn (\n\t\t\t\t<Prompt\n\t\t\t\t\tid={TestHelper.generateId(id, \"onemap-error\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"onemap-error\")}\n\t\t\t\t\ttitle=\"Map not available\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tshow={true}\n\t\t\t\t\timage={<ErrorImage src={ERROR_SVG} />}\n\t\t\t\t\tdescription={\n\t\t\t\t\t\t<Description weight=\"regular\">\n\t\t\t\t\t\t\tSorry, there was a problem with the map. You&rsquo;ll not be able to enter the location\n\t\t\t\t\t\t\tright now. Please try again later.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tDo note that you&rsquo;ll not be able to submit your report without entering the location.\n\t\t\t\t\t\t</Description>\n\t\t\t\t\t}\n\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: \"ok\",\n\t\t\t\t\t\t\ttitle: \"OK\",\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tsetShowOneMapError(false);\n\t\t\t\t\t\t\t\thandleCloseLocationModal();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tif (showGetLocationError) {\n\t\t\treturn (\n\t\t\t\t<Prompt\n\t\t\t\t\tid={TestHelper.generateId(id, \"get-location-error\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"get-location-error\")}\n\t\t\t\t\ttitle=\"Enable location settings\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tshow={true}\n\t\t\t\t\tdescription={\n\t\t\t\t\t\t\"We need your permission to determine your location. Enable location access in your browser and device settings, or enter your location manually.\"\n\t\t\t\t\t}\n\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: \"ok\",\n\t\t\t\t\t\t\ttitle: \"OK\",\n\t\t\t\t\t\t\tonClick: handleCloseLocationPermissionModal,\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tif (showGetLocationTimeoutError) {\n\t\t\treturn (\n\t\t\t\t<Prompt\n\t\t\t\t\tid={TestHelper.generateId(id, \"get-location-timeout-error\")}\n\t\t\t\t\tdata-testid={TestHelper.generateId(id, \"get-location-timeout-error\")}\n\t\t\t\t\ttitle=\"Something went wrong\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tshow={true}\n\t\t\t\t\timage={<ErrorImage src={TIMEOUT_SVG} />}\n\t\t\t\t\tdescription={\n\t\t\t\t\t\t<Description weight=\"regular\">\n\t\t\t\t\t\t\tIt&rsquo;s taking longer than expected to retrieve your location. Please exit the map and\n\t\t\t\t\t\t\ttry again.\n\t\t\t\t\t\t</Description>\n\t\t\t\t\t}\n\t\t\t\t\tbuttons={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: \"ok\",\n\t\t\t\t\t\t\ttitle: \"OK\",\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tsetShowGetLocationTimeoutError(false);\n\t\t\t\t\t\t\t\thandleCloseLocationModal();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PrefetchImage src={OFFLINE_IMAGE} alt=\"no internet connectivity\" />\n\t\t\t<Modal\n\t\t\t\tid={TestHelper.generateId(id, \"modal\", showLocationModal ? \"show\" : \"hide\")}\n\t\t\t\tshow={showLocationModal}\n\t\t\t>\n\t\t\t\t<ModalBox\n\t\t\t\t\tid={TestHelper.generateId(id, \"modal-box\")}\n\t\t\t\t\tclassName={`${className}-modal-box`}\n\t\t\t\t\tshowCloseButton={false}\n\t\t\t\t\tlocationModalStyles={locationModalStyles}\n\t\t\t\t>\n\t\t\t\t\t{hasInternetConnectivity ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<LocationSearch\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\t\tonConfirm={handleConfirm}\n\t\t\t\t\t\t\t\tupdateFormValues={updateFormValues}\n\t\t\t\t\t\t\t\tgettingCurrentLocation={gettingCurrentLocation}\n\t\t\t\t\t\t\t\tpanelInputMode={panelInputMode}\n\t\t\t\t\t\t\t\tselectedAddressInfo={selectedAddressInfo}\n\t\t\t\t\t\t\t\tmapPickedLatLng={mapPickedLatLng}\n\t\t\t\t\t\t\t\tformValues={formValues}\n\t\t\t\t\t\t\t\tonChangeSelectedAddressInfo={setSelectedAddressInfo}\n\t\t\t\t\t\t\t\thandleApiErrors={handleApiErrors}\n\t\t\t\t\t\t\t\tonGetLocationCallback={handleGetLocationCallback}\n\t\t\t\t\t\t\t\tsetSinglePanelMode={setSinglePanelMode}\n\t\t\t\t\t\t\t\tshowLocationModal={showLocationModal}\n\t\t\t\t\t\t\t\treverseGeoCodeEndpoint={reverseGeoCodeEndpoint}\n\t\t\t\t\t\t\t\tgettingCurrentLocationFetchMessage={gettingCurrentLocationFetchMessage}\n\t\t\t\t\t\t\t\tmustHavePostalCode={mustHavePostalCode}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<StyledLocationPicker\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tpanelInputMode={panelInputMode}\n\t\t\t\t\t\t\t\tlocationAvailable={locationAvailable}\n\t\t\t\t\t\t\t\tgettingCurrentLocation={gettingCurrentLocation}\n\t\t\t\t\t\t\t\tshowLocationModal={showLocationModal}\n\t\t\t\t\t\t\t\tselectedLocationCoord={{\n\t\t\t\t\t\t\t\t\tlat: selectedAddressInfo.lat,\n\t\t\t\t\t\t\t\t\tlng: selectedAddressInfo.lng,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tgetCurrentLocation={getCurrentLocation}\n\t\t\t\t\t\t\t\tonMapCenterChange={handleMapClick}\n\t\t\t\t\t\t\t\tinteractiveMapPinIconUrl={interactiveMapPinIconUrl}\n\t\t\t\t\t\t\t\tmapPanZoom={mapPanZoom}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<NoNetworkModal id={id} cachedImage={OFFLINE_IMAGE} refreshNetwork={refreshNetwork} />\n\t\t\t\t\t)}\n\t\t\t\t</ModalBox>\n\t\t\t</Modal>\n\t\t\t{renderNetworkErrorPrompt()}\n\t\t</>\n\t);\n};\n\nexport default LocationModal;\n"],"names":["OFFLINE_IMAGE","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","markerFrom","lat","lng","iconUrl","isSelected","pinSize","L.marker","icon","L.icon","iconSize","iconAnchor","removeMarkers","markers","forEach","marker","remove","LocationPickerWrapper","styled","div","LeafletWrapper","Color","Neutral","Primary","ButtonLocation","button","ButtonLocationImage","img","ModalBox","Modal","Box","locationModalStyles","MediaQuery","MaxWidth","tablet","mobileL","MediaWidths","StyledLocationPicker","id","className","mapPanZoom","panelInputMode","showLocationModal","selectedLocationCoord","interactiveMapPinIconUrl","getCurrentLocation","locationAvailable","gettingCurrentLocation","onMapCenterChange","mapRef","useRef","leafletWrapperRef","markersRef","isMobile","window","matchMedia","matches","leafletConfig","useEffect","current","L.map","zoomControl","resetView","L.control","exports","control","zoom","position","addTo","basemap","L.tileLayer","tileLayer","detectRetina","maxNativeZoom","maxZoom","minZoom","attribution","setMaxBounds","LocationHelper","getMapBounds","zoomWithMarkers","map","on","latlng","setMinZoom","min","off","undefined","center","L.bounds","getCenter","setView","x","y","setTimeout","invalidateSize","target","panZoomValue","Math","max","mobile","nonMobile","zoomValue","getBounds","contains","getZoom","flyTo","L.latLng","_jsxs","TestHelper","generateId","children","_jsx","onClick","src","alt","ErrorImage","PrefetchImage","createObserverCache","cachesByRoot","Map","getObserver","_ref","root","rootMargin","threshold","cacheByRoot","get","set","cacheKey","JSON","stringify","cachedObserver","entryCallbacks","observer","IntersectionObserver","entries","entry","callback","observe","node","_cachedObserver","_cachedObserver2","unobserve","_cachedObserver3","_cachedObserver4","DEFAULT_ROOT_MARGIN","DEFAULT_THRESHOLD","observerCache","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useTrackVisibility","args","_result$entry","_useIntersectionObser","_args$rootMargin","_args$threshold","nodeRef","rootRef","observerRef","_useState","useState","setEntry","useCallback","observedEntry","currentObserver","rootNode","useIntersectionObserver","result","isVisible","Boolean","isIntersecting","wasEverVisible","setWasEverVisible","InfiniteListItem","Spinner","WIDTH","HEIGHT","spinnerAnimation","keyframes","SpinnerBar","BAR_WIDTH","TOTAL_BARS","Array","fill","foo","LoadingIndicator","props","InfiniteScrollList","loading","items","hasNextPage","error","loadMore","sentryRef","onLoadMore","disabled","_ref$delayInMs","delayInMs","_useTrackVisibility","_useTrackVisibility$","shouldLoadMore","timer","clearTimeout","useInfiniteScroll","_Fragment","pagination","array","pageSize","pageNum","slice","boldResultsWithQuery","arr","query","regex","RegExp","obj","newAddress","displayAddressText","address","replace","SearchWrapper","SearchBarContainer","hasScrolled","Accent","Light","SearchBarIconButton","SearchBarIcon","SearchBarInput","input","SearchBarModalCross","CrossIcon","SearchBarCross","ResultWrapper","ResultTitle","Text","H5","NoResultTitle","BodySmall","ResultItem","active","ResultItemPin","ButtonWrapper","ButtonItem","Button","Default","buttonType","LocationSearch","formValues","mustHavePostalCode","selectedAddressInfo","mapPickedLatLng","reverseGeoCodeEndpoint","addressFieldPlaceholder","gettingCurrentLocationFetchMessage","locationListTitle","handleApiErrors","onGetLocationCallback","onChangeSelectedAddressInfo","onCancel","onConfirm","setSinglePanelMode","updateFormValues","addFieldEventListener","removeFieldEventListener","useFieldEvent","inputRef","resultRef","reverseGeocodeAborter","setHasScrolled","queryString","setQueryString","showPostalCodeError","setShowPostalCodeError","resultState","setResultState","setLoading","selectedIndex","setSelectedIndex","searchBuildingResults","setSearchBuildingResults","apiResults","setAPIResults","PAGE_SIZE","setHasNextPage","totalNumPages","setTotalNumPages","apiPageNum","setAPIPageNum","currentPaginationPageNum","setCurrentPaginationPageNum","debounceFetchAddress","fetchSingleLocationByAddress","fetchSingleLocationByLatLng","fetchLocationList","dispatchFieldEvent","Promise","all","async","reverseGeocode","route","latitude","longitude","bufferRadius","abortSignal","signal","otherFeatures","OneMapBoolean","YES","OneMapError","reverseGeoCodeCheck","navigator","onLine","displayResultsFromLatLng","setCurrentLocationHandler","detail","payload","errors","code","GeolocationPositionErrorWrapper","isEmpty","handleResult","locationFieldValue","validPostalCode","hasGotAddressValue","postalCode","parsedString","validateQueryString","resetResultsList","value","res","populateDisplayList","results","boldResults","scrollTo","SyntaxError","TypeError","handleClickCancel","handleInputFocus","focus","handleError","errorType","defaultHandle","addressLat","addressLng","onError","resultListItem","firstItem","params","displayResults","data","stringToQuery","trim","onFocus","onChange","event","placeholder","readOnly","onScroll","scrollTop","item","index","listitem","handleClickResult","Sanitize","sanitizeOptions","allowedTags","allowedAttributes","span","newCurrentPageNum","boldData","concat","styleType","Prompt","title","size","show","description","buttons","Container","Image","ContentTitle","Body","ContentBody","NoNetworkModal","cachedImage","refreshNetwork","weight","LocationModal","onClose","setPanelInputMode","setSelectedAddressInfo","setLocationAvailable","setGettingCurrentLocation","hasInternetConnectivity","setHasInternetConnectivity","showGetLocationError","setShowGetLocationError","showOneMapError","setShowOneMapError","showGetLocationTimeoutError","setShowGetLocationTimeoutError","setMapPickedLatLng","e","handleCloseLocationModal","mql","handleHasInternetConnectivity","handleNoInternetConnectivity","handleResize","addEventListener","removeEventListener","handleCloseLocationPermissionModal","inputMode","GeoLocationHelper","restoreFormvalues","showCloseButton","toString","GeolocationPositionError","TIMEOUT","image","Description","renderNetworkErrorPrompt"],"mappings":"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"}