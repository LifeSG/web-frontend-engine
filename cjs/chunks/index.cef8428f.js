"use strict";var e=require("react"),t=require("./index.2c9074e9.js");require("react/jsx-runtime"),require("@lifesg/react-design-system/media"),require("@lifesg/react-design-system/text"),require("@lifesg/react-design-system/color"),require("styled-components"),require("@lifesg/react-design-system/button"),require("@lifesg/react-design-system/modal"),require("@lifesg/react-design-system/markup"),require("react-dom/server"),require("@lifesg/react-design-system/alert"),require("@lifesg/react-design-system/layout"),require("@lifesg/react-design-system/box-container"),require("@lifesg/react-design-system/divider"),require("@lifesg/react-design-system/text-list"),require("@lifesg/react-design-system/popover-v2"),require("@lifesg/react-icons"),require("@lifesg/react-design-system/tab"),require("@lifesg/react-icons/plus-circle-fill"),require("@lifesg/react-design-system/button-with-icon"),require("@lifesg/react-design-system/error-display"),require("@lifesg/react-design-system/filter"),require("@lifesg/react-design-system/uneditable-section"),require("@lifesg/react-design-system/timeline"),require("@lifesg/react-design-system/form"),require("@lifesg/react-design-system/toggle"),require("@lifesg/react-design-system/checkbox"),require("@lifesg/react-design-system/file-upload"),require("@lifesg/react-icons/cross"),require("@lifesg/react-design-system/icon-button"),require("@lifesg/react-icons/bin"),require("@lifesg/react-icons/eraser"),require("@lifesg/react-icons/pencil"),require("@lifesg/react-icons/pencil-stroke"),require("@lifesg/react-design-system"),require("@lifesg/react-icons/plus"),require("@lifesg/react-icons/exclamation-triangle"),require("@lifesg/react-icons/pin-fill"),require("@lifesg/react-design-system/image-button"),require("@lifesg/react-design-system/radio-button");exports.default=a=>{const{accepts:s,compress:r,dimensions:i,editImage:n,id:u,maxSizeInKb:l,outputType:c,upload:o,value:g}=a,{images:m,setImages:d,setErrorCount:E,setCurrentFileIds:f}=e.useContext(t.ImageContext),p=t.usePrevious(m),R=t.usePrevious(g),{setValue:I}=t.useFormContext(),S=e.useRef(),y=e.useRef(0),{dispatchFieldEvent:q,addFieldEventListener:h,removeFieldEventListener:D}=t.useFieldEvent();e.useEffect((()=>{const e=e=>{d((t=>{const a=t.findIndex((t=>t.id===e.detail.id)),s={...t[a]};s.status=e.detail.updatedStatus,s.customErrorMessage=e.detail.errorMessage;const r=[...t];return r.splice(a,1,s),r}))};return h("update-image-status",u,e),()=>D("update-image-status",u,e)}),[h,u,D,d]),e.useEffect((()=>{S.current=t.generateRandomId()}),[]),e.useEffect((()=>{m.forEach(((e,a)=>{const i=p?.[a];if(e.status!==i?.status||e.dataURL!==i.dataURL)switch(e.status){case t.EImageStatus.INJECTED:t.FileHelper.dataUrlToBlob(e.dataURL).then((s=>{d((r=>{const i=[...r];return i[a]={...e,file:new File([s],e.name),status:t.EImageStatus.NONE},i}))})).catch((()=>{d((e=>e.filter(((e,t)=>t!==a))))}));break;case t.EImageStatus.NONE:t.FileHelper.getType(e.file).then((i=>{const n=i.mime;n&&s.map(t.FileHelper.fileExtensionToMimeType).includes(n)?(d((s=>{const r=[...s];return r[a]={...e,name:t.FileHelper.deduplicateFileName(m.map((({name:e})=>e)),a,e.name),type:n,status:"schema"!==e.addedFrom?e.status:t.EImageStatus.UPLOADED},r})),"schema"!==e.addedFrom&&(r?T(a,e):U(a,e))):d((s=>{const r=[...s];return r[a]={...e,status:t.EImageStatus.ERROR_FORMAT},r}))}));break;case t.EImageStatus.TO_RECOMPRESS:w(a,e);break;case t.EImageStatus.COMPRESSED:case t.EImageStatus.CONVERTED:case t.EImageStatus.RECOMPRESSED:if(!n){const s=!q("upload-ready",u,{imageData:e});d((e=>{const r=[...e];return r[a]={...r[a],status:s?t.EImageStatus.PENDING:t.EImageStatus.UPLOAD_READY},r}))}break;case t.EImageStatus.UPLOAD_READY:L(a,e);break;case t.EImageStatus.TO_DELETE:d((e=>e.filter((({status:e})=>e!==t.EImageStatus.TO_DELETE))));break;case t.EImageStatus.UPLOADED:q("uploaded",u,{imageData:e})}}))}),[m.map((({status:e})=>e)).join(","),m.map((({dataURL:e})=>e)).join(",")]),e.useEffect((()=>{let e=0;m.forEach((a=>{(a.type&&!s.map(t.FileHelper.fileExtensionToMimeType).includes(a.type)||[t.EImageStatus.ERROR_GENERIC,t.EImageStatus.ERROR_SIZE].includes(a.status))&&e++})),E((t=>Math.max(0,t+e-y.current))),y.current=e;const a=m.filter((({status:e})=>e===t.EImageStatus.UPLOADED||e===t.EImageStatus.ERROR_CUSTOM_MUTED)),r=a.filter((({addedFrom:e})=>"schema"!==e)),i=m.filter((({status:e})=>e===t.EImageStatus.TO_DELETE)).length>0,n=r.length>0,l=n||i;f(a.map((({id:e})=>e))),I(u,a.map((({id:e,dataURL:t,drawingDataURL:a,name:s,metadata:r,uploadResponse:i})=>({fileId:e,fileName:s,dataURL:a||t,metadata:r,uploadResponse:i}))),{shouldDirty:l,shouldTouch:n})}),[s,u,m,E,I]),e.useEffect((()=>{void 0!==R&&void 0===g&&m.length&&d([])}),[void 0===R,void 0===g,m.length]);const O=(e,t)=>{let a=i.width/e;return t*a>i.height&&(a=i.height/t),a},U=async(e,a)=>{try{const s=await t.ImageHelper.convertBlob(a.file,t.FileHelper.fileExtensionToMimeType(c)),r=t.FileHelper.getFilesizeFromBase64(s);if(l&&r>1024*l)d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_SIZE},s}));else{const r=await t.ImageHelper.getMetadata(a.file);d((a=>{const i=[...a];return i[e]={...a[e],dataURL:s,metadata:r,status:t.EImageStatus.CONVERTED},i}))}}catch(a){d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},T=async(e,a)=>{try{const s=await t.ImageHelper.convertBlob(a.file,t.FileHelper.fileExtensionToMimeType(c)),r=await t.ImageHelper.dataUrlToImage(s),i={w:r.naturalWidth,h:r.naturalHeight},n=O(i.w,i.h);let u=await t.ImageHelper.resampleImage(r,{scale:n});if(l&&(u=await t.ImageHelper.compressImage(u,{fileSize:l})),l&&u.size>1024*l)d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_SIZE},s}));else{const s=await t.ImageHelper.getMetadata(a.file),r=await t.FileHelper.fileToDataUrl(u);d((a=>{const i=[...a];return i[e]={...a[e],dataURL:r,metadata:s,status:t.EImageStatus.COMPRESSED},i}))}}catch(a){d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},w=async(e,a)=>{if(a.drawingDataURL)try{const s=await t.ImageHelper.dataUrlToImage(a.drawingDataURL),r={w:s.naturalWidth,h:s.naturalHeight},i=O(r.w,r.h);let n=await t.ImageHelper.resampleImage(s,{scale:i});if(n=await t.ImageHelper.compressImage(n,{fileSize:l}),n.size>1024*l){const a=[...m];a[e]={...m[e],status:t.EImageStatus.ERROR_SIZE},d(a)}else{const a=await t.FileHelper.fileToDataUrl(n),s=[...m];s[e]={...m[e],drawingDataURL:a,status:t.EImageStatus.RECOMPRESSED},d(s)}}catch(a){d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},L=async(e,a)=>{try{let s;if(d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.UPLOADING},s})),o?.method&&o?.url){const r=new FormData;r.append("dataURL",a.drawingDataURL||a.dataURL||""),r.append("sessionId",o?.sessionId||S.current||""),r.append("slot",`${a.slot}`),s=await new t.AxiosApiClient("",void 0,void 0,!0)[o.method](o.url,r,{onUploadProgress:t=>{const{loaded:a,total:s}=t,r=Math.floor(100*a/s);d((t=>{const a=[...t];return a[e]={...t[e],uploadProgress:r},a}))}})}d((a=>{const r=[...a];return r[e]={...a[e],uploadResponse:s,status:t.EImageStatus.UPLOADED},r}))}catch(a){d((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}};return null};
//# sourceMappingURL=index.cef8428f.js.map
