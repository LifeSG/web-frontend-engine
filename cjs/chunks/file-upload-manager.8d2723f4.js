"use strict";var e=require("react"),t=require("./index.59fe62bc.js");require("react/jsx-runtime"),require("@lifesg/react-design-system/text"),require("@lifesg/react-design-system/modal"),require("react-dom/server"),require("@lifesg/react-design-system/media"),require("events"),require("buffer"),require("@lifesg/react-design-system/color"),require("styled-components"),require("@lifesg/react-design-system/button"),require("@lifesg/react-design-system/layout"),require("@lifesg/react-design-system/alert"),require("@lifesg/react-design-system/divider"),require("@lifesg/react-design-system/text-list"),require("@lifesg/react-design-system/tab"),require("@lifesg/react-design-system/filter"),require("@lifesg/react-design-system/box-container"),require("@lifesg/react-design-system/uneditable-section"),require("@lifesg/react-icons"),require("@lifesg/react-design-system/form"),require("@lifesg/react-design-system/toggle"),require("@lifesg/react-design-system/checkbox"),require("@lifesg/react-design-system/input-textarea"),require("@lifesg/react-design-system/file-upload"),require("@lifesg/react-icons/cross"),require("@lifesg/react-design-system/icon-button"),require("@lifesg/react-icons/pin-fill"),require("@lifesg/react-design-system"),require("@lifesg/react-design-system/image-button"),require("@lifesg/react-design-system/radio-button");const i=["image/jpeg","image/gif","image/png"];exports.default=a=>{const{compressImages:s,fileTypeRule:r,id:l,maxFileSizeRule:n,upload:o,value:u}=a,{files:m,setFiles:d}=e.useContext(t.FileUploadContext),f=t.usePrevious(u),{setValue:c}=t.useFormContext(),g=e.useRef();e.useEffect((()=>{g.current=t.generateRandomId()}),[]),e.useEffect((()=>{m.forEach((async(e,i)=>{try{switch(e.status){case t.EFileStatus.INJECTED:await E(e,i);break;case t.EFileStatus.NONE:await I(e,i);break;case t.EFileStatus.UPLOAD_READY:await w(e,i);break;case t.EFileStatus.TO_DELETE:R(i)}}catch(e){p(i)}}));const e=m.filter((({status:e})=>e===t.EFileStatus.UPLOADED)),i=e.filter((({addedFrom:e})=>"schema"!==e)),a=m.filter((({status:e})=>e===t.EFileStatus.TO_DELETE)).length>0,s=i.length>0||a;c(l,e.map((({dataURL:e,fileItem:t,fileUrl:i,uploadResponse:a})=>({..."base64"===o.type?{dataURL:e}:{},fileId:t.id,fileName:t.name,fileUrl:i,uploadResponse:a}))),{shouldDirty:s})}),[m.map((({fileItem:e,status:t})=>`${e?.id}-${t}`)).join(",")]),e.useEffect((()=>{void 0!==f&&void 0===u&&m.length&&d([])}),[void 0===f,void 0===u,m.length]);const p=e=>{d((i=>{const a=[...i],s=i[e];return a[e]={...s,fileItem:{...s.fileItem,id:s.fileItem?.id||t.generateRandomId(),name:s.rawFile.name,errorMessage:t.ERROR_MESSAGES.UPLOAD().GENERIC},status:t.EFileStatus.ERROR_GENERIC},a}))},F=async(e,a)=>{if(i.includes(a||e.fileItem?.type)){const i=await t.ImageHelper.dataUrlToImage(e.dataURL),a=await t.ImageHelper.resampleImage(i,{width:94,height:94,crop:!0});return await t.FileHelper.fileToDataUrl(a)}return""},y=async e=>{const{addedFrom:i,dataURL:a,rawFile:s}=e,l=await t.FileHelper.getType(s);if(!(!r.fileType?.length||r.fileType?.includes(l.ext)))return{errorMessage:r.errorMessage||t.ERROR_MESSAGES.UPLOAD().FILE_TYPE(r.fileType||[]),fileType:l,status:t.EFileStatus.ERROR_FORMAT};if(n.maxSizeInKb>0){const e=1024*n.maxSizeInKb;if("base64"===o.type&&t.FileHelper.getFilesizeFromBase64(a)>e||"multipart"===o.type&&s.size>e)return{errorMessage:n.errorMessage||t.ERROR_MESSAGES.UPLOAD().MAX_FILE_SIZE(n.maxSizeInKb),fileType:l,status:t.EFileStatus.ERROR_SIZE}}return"schema"===i?{fileType:l,status:t.EFileStatus.UPLOADED}:{fileType:l,status:t.EFileStatus.UPLOAD_READY}},E=async(e,i)=>{let a;if(d((e=>{const a=[...e];return a[i]={...e[i],status:t.EFileStatus.INJECTING},a})),e.dataURL){const i=await t.FileHelper.dataUrlToBlob(e.dataURL);a=new File([i],e.rawFile.name)}else if(e.fileUrl){const i=await new t.AxiosApiClient("",void 0,void 0,!1,{responseType:"blob"}).get(e.fileUrl),s=await t.FileHelper.getType(new File([i],e.rawFile.name));a=new File([i],e.rawFile.name,{type:s.mime}),e.dataURL=await t.FileHelper.fileToDataUrl(a)}const{errorMessage:s,fileType:r}=await y({...e,rawFile:a}),l=await F(e,r.mime);d((n=>{const o=[...n];return o[i]={...e,fileItem:{errorMessage:s,id:e.fileItem?.id||t.generateRandomId(),name:t.FileHelper.deduplicateFileName(m.map((({fileItem:e})=>e?.name)),i,a.name),progress:1,size:a.size,type:r.mime,thumbnailImageDataUrl:l},rawFile:a,status:t.EFileStatus.UPLOADED},o}))},I=async(e,i)=>{const a=await U(e),s=await t.FileHelper.fileToDataUrl(a.rawFile),{errorMessage:r,fileType:l,status:n}=await y({dataURL:s,...a});d((e=>{const o=[...e];return o[i]={...a,dataURL:s,fileItem:{errorMessage:r,id:t.generateRandomId(),name:t.FileHelper.deduplicateFileName(m.map((({fileItem:e})=>e?.name)),i,a.rawFile.name),size:a.rawFile.size,type:l.mime,progress:0},status:n},o}))},w=async(e,i)=>{d((e=>{const a=[...e];return a[i]={...e[i],status:t.EFileStatus.UPLOADING},a}));const a=new FormData;a.append("sessionId",g.current||""),a.append("fileId",e.fileItem.id),a.append("slot",e.slot.toString()),"base64"===o.type?a.append("dataURL",e.dataURL):"multipart"===o.type&&a.append("file",e.rawFile,e.fileItem?.name);const s=await new t.AxiosApiClient("",void 0,void 0,!0).post(o.url,a,{headers:{"Content-Type":"base64"===o.type?"application/json":"multipart/form-data"},onUploadProgress:e=>{const{loaded:t,total:a}=e;d((e=>{if(!e[i])return e;const s=[...e];return s[i]={...e[i],fileItem:{...e[i].fileItem,progress:t/a}},s}))}}),r=await F(e);d((e=>{if(!e[i])return e;const a=[...e];return a[i]={...e[i],fileItem:{...e[i].fileItem,progress:1,thumbnailImageDataUrl:r},fileUrl:s?.data?.fileUrl,status:t.EFileStatus.UPLOADED,uploadResponse:s},a}))},R=e=>{d((t=>t.filter(((t,i)=>i!==e))))},U=async e=>{if(n.maxSizeInKb>0&&s){const a=1024*n.maxSizeInKb;if(e.rawFile.size>a){const a=await t.FileHelper.getType(e.rawFile);if(i.includes(a.mime)){let i=await t.ImageHelper.compressImage(e.rawFile,{fileSize:n.maxSizeInKb});return i instanceof Blob&&(i=t.FileHelper.blobToFile(i,{name:e.rawFile.name,lastModified:e.rawFile.lastModified})),{...e,rawFile:i}}}}return e};return null};
//# sourceMappingURL=file-upload-manager.8d2723f4.js.map
