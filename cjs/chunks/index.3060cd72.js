"use strict";var e=require("react"),t=require("./index.76c52ec8.js");require("react/jsx-runtime"),require("events"),require("buffer"),require("@lifesg/react-design-system/media"),require("@lifesg/react-design-system/text"),require("@lifesg/react-design-system/color"),require("styled-components"),require("@lifesg/react-design-system/modal"),require("@lifesg/react-design-system/button"),require("react-dom/server"),require("@lifesg/react-design-system/layout"),require("@lifesg/react-design-system/alert"),require("@lifesg/react-design-system/divider"),require("@lifesg/react-design-system/tab"),require("@lifesg/react-design-system/filter"),require("@lifesg/react-design-system/box-container"),require("@lifesg/react-design-system/uneditable-section"),require("@lifesg/react-icons/eye"),require("@lifesg/react-icons/eye-slash"),require("@lifesg/react-icons"),require("@lifesg/react-design-system/form"),require("@lifesg/react-design-system/toggle"),require("@lifesg/react-design-system/checkbox"),require("@lifesg/react-design-system/input-textarea"),require("@lifesg/react-design-system/file-upload"),require("@lifesg/react-icons/cross"),require("@lifesg/react-design-system/icon-button"),require("@lifesg/react-icons/pin-fill"),require("@lifesg/react-design-system"),require("@lifesg/react-design-system/radio-button");exports.default=a=>{const{accepts:s,compress:r,dimensions:i,editImage:u,id:n,maxSizeInKb:l,outputType:o,upload:c,value:g}=a,{images:m,setImages:E,setErrorCount:d}=e.useContext(t.ImageContext),f=t.usePrevious(m),[R,p]=e.useState(0),I=t.usePrevious(g),{setValue:S,getFieldState:y}=t.useFormContext(),h=e.useRef();e.useEffect((()=>{h.current=Array(5).fill(0).map((()=>Math.random().toString(36).slice(2))).join("")}),[]),e.useEffect((()=>{m.forEach(((e,a)=>{const i=f?.[a];if(e.status!==i?.status||e.dataURL!==i.dataURL)switch(e.status){case t.EImageStatus.INJECTED:t.FileHelper.dataUrlToBlob(e.dataURL).then((s=>{E((r=>{const i=[...r];return i[a]={...e,file:new File([s],e.name),status:t.EImageStatus.NONE},i}))})).catch((()=>{E((e=>e.filter(((e,t)=>t!==a))))}));break;case t.EImageStatus.NONE:t.FileHelper.getType(e.file).then((i=>{const u=i.mime;u&&s.map(t.FileHelper.fileExtensionToMimeType).includes(u)?(E((s=>{const r=[...s];return r[a]={...e,name:t.FileHelper.deduplicateFileName(m.map((({name:e})=>e)),a,e.name),type:u,status:"schema"!==e.addedFrom?e.status:t.EImageStatus.UPLOADED},r})),"schema"!==e.addedFrom&&(r?O(a,e):D(a,e))):E((s=>{const r=[...s];return r[a]={...e,status:t.EImageStatus.ERROR_FORMAT},r}))}));break;case t.EImageStatus.TO_RECOMPRESS:U(a,e);break;case t.EImageStatus.COMPRESSED:case t.EImageStatus.CONVERTED:case t.EImageStatus.RECOMPRESSED:u||E((e=>{const s=[...e];return s[a]={...s[a],status:t.EImageStatus.UPLOAD_READY},s}));break;case t.EImageStatus.UPLOAD_READY:w(a,e);break;case t.EImageStatus.TO_DELETE:E((e=>e.filter((({status:e})=>e!==t.EImageStatus.TO_DELETE))))}}))}),[m.map((({status:e})=>e)).join(","),m.map((({dataURL:e})=>e)).join(",")]),e.useEffect((()=>{let e=0;m.forEach((a=>{(a.type&&!s.map(t.FileHelper.fileExtensionToMimeType).includes(a.type)||[t.EImageStatus.ERROR_GENERIC,t.EImageStatus.ERROR_SIZE].includes(a.status))&&e++})),d((t=>Math.max(0,t+e-R))),p(e);const a=m.filter((({status:e})=>e===t.EImageStatus.UPLOADED)),r=a.filter((({addedFrom:e})=>"schema"!==e)),i=m.filter((({status:e})=>e===t.EImageStatus.TO_DELETE)).length>0,u=r.length>0||i;S(n,a.map((({dataURL:e,drawingDataURL:t,name:a,uploadResponse:s})=>({fileName:a,dataURL:t||e,uploadResponse:s}))),{shouldDirty:u})}),[m.map((e=>e.status)).join(",")]),e.useEffect((()=>{void 0!==I&&void 0===g&&m.length&&E([])}),[void 0===I,void 0===g,m.length]);const q=(e,t)=>{let a=i.width/e;return t*a>i.height&&(a=i.height/t),a},D=async(e,a)=>{try{const s=await t.ImageHelper.convertBlob(a.file,t.FileHelper.fileExtensionToMimeType(o)),r=t.FileHelper.getFilesizeFromBase64(s);E(l&&r>1024*l?a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_SIZE},s}:a=>{const r=[...a];return r[e]={...a[e],dataURL:s,status:t.EImageStatus.CONVERTED},r})}catch(a){E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},O=async(e,a)=>{try{const s=await t.FileHelper.fileToDataUrl(a.file),r=await t.ImageHelper.dataUrlToImage(s),i={w:r.naturalWidth,h:r.naturalHeight},u=q(i.w,i.h);let n=await t.ImageHelper.resampleImage(r,{scale:u});if(l&&(n=await t.ImageHelper.compressImage(n,{fileSize:l})),l&&n.size>1024*l)E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_SIZE},s}));else{const a=await t.FileHelper.fileToDataUrl(n);E((s=>{const r=[...s];return r[e]={...s[e],dataURL:a,status:t.EImageStatus.COMPRESSED},r}))}}catch(a){E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},U=async(e,a)=>{if(a.drawingDataURL)try{const s=await t.ImageHelper.dataUrlToImage(a.drawingDataURL),r={w:s.naturalWidth,h:s.naturalHeight},i=q(r.w,r.h);let u=await t.ImageHelper.resampleImage(s,{scale:i});if(u=await t.ImageHelper.compressImage(u,{fileSize:l}),u.size>1024*l){const a=[...m];a[e]={...m[e],status:t.EImageStatus.ERROR_SIZE},E(a)}else{const a=await t.FileHelper.fileToDataUrl(u),s=[...m];s[e]={...m[e],drawingDataURL:a,status:t.EImageStatus.RECOMPRESSED},E(s)}}catch(a){E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}},w=async(e,a)=>{try{let s;if(E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.UPLOADING},s})),c?.method&&c?.url){const r=new FormData;r.append("dataURL",a.drawingDataURL||a.dataURL||""),r.append("sessionId",h.current||""),r.append("slot",`${a.slot}`),s=await new t.AxiosApiClient("",void 0,void 0,!0)[c.method](c.url,r,{onUploadProgress:t=>{const{loaded:a,total:s}=t,r=Math.floor(100*a/s);E((t=>{const a=[...t];return a[e]={...t[e],uploadProgress:r},a}))}})}E((a=>{const r=[...a];return r[e]={...a[e],uploadResponse:s,status:t.EImageStatus.UPLOADED},r}))}catch(a){E((a=>{const s=[...a];return s[e]={...a[e],status:t.EImageStatus.ERROR_GENERIC},s}))}};return null};
//# sourceMappingURL=index.3060cd72.js.map
